import { ExtendableError } from '../error.js';
import { RequestDocument, Variables } from 'graphql-request';
export declare class RequestClientError extends ExtendableError {
    statusCode: number;
    constructor(message: string, statusCode: number);
}
export declare function buildHeaders(token: string): Promise<{
    [key: string]: string;
}>;
/**
 * Removes the sensitive data from the headers and outputs them as a string.
 * @param headers - HTTP headers.
 * @returns A sanitized version of the headers as a string.
 */
export declare function sanitizedHeadersOutput(headers: {
    [key: string]: string;
}): string;
export declare function debugLogRequest<T>(api: string, query: RequestDocument, variables?: Variables, headers?: {
    [key: string]: string;
}): void;
export declare function handlingErrors<T>(api: string, action: () => Promise<T>): Promise<T>;
