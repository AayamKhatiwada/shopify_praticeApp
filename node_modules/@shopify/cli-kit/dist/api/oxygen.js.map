{"version":3,"file":"oxygen.js","sourceRoot":"","sources":["../../src/api/oxygen.ts"],"names":[],"mappings":"AAAA,OAAO,EAAC,YAAY,EAAE,eAAe,EAAC,MAAM,aAAa,CAAA;AACzD,OAAO,EAAC,aAAa,EAAC,MAAM,oBAAoB,CAAA;AAChD,OAAO,EAAC,YAAY,EAAC,MAAM,YAAY,CAAA;AAKvC,MAAM,CAAC,KAAK,UAAU,OAAO,CAC3B,aAAqB,EACrB,KAAsB,EACtB,KAAa,EACb,SAAqB;IAErB,MAAM,OAAO,GAAG,MAAM,YAAY,CAAC,KAAK,CAAC,CAAA;IACzC,eAAe,CAAC,QAAQ,EAAE,KAAK,EAAE,SAAS,EAAE,OAAO,CAAC,CAAA;IACpD,MAAM,MAAM,GAAG,MAAM,aAAa,CAAC;QACjC,OAAO;QACP,GAAG,EAAE,gBAAgB,CAAC,aAAa,CAAC;KACrC,CAAC,CAAA;IAEF,MAAM,QAAQ,GAAG,MAAM,MAAM,CAAC,OAAO,CAAI,KAAK,EAAE,SAAS,CAAC,CAAA;IAC1D,OAAO,QAAQ,CAAA;AACjB,CAAC;AAED,MAAM,CAAC,KAAK,UAAU,oBAAoB,CAAC,aAAqB,EAAE,KAAa,EAAE,IAAc;IAC7F,MAAM,OAAO,GAAG,MAAM,YAAY,CAAC,KAAK,CAAC,CAAA;IACzC,OAAO,OAAO,CAAC,cAAc,CAAC,CAAA;IAE9B,MAAM,QAAQ,GAAG,MAAM,YAAY,CAAC,gBAAgB,CAAC,aAAa,CAAC,EAAE;QACnE,MAAM,EAAE,MAAM;QACd,IAAI,EAAE,IAAI;QACV,OAAO,EAAE;YACP,GAAG,OAAO;YACV,GAAG,IAAI,CAAC,UAAU,EAAE;SACrB;KACF,CAAC,CAAA;IAEF,OAAO,QAAQ,CAAA;AACjB,CAAC;AAED,MAAM,gBAAgB,GAAG,CAAC,UAAkB,EAAU,EAAE;IACtD,OAAO,WAAW,UAAU,wBAAwB,CAAA;AACtD,CAAC,CAAA","sourcesContent":["import {buildHeaders, debugLogRequest} from './common.js'\nimport {graphqlClient} from '../http/graphql.js'\nimport {shopifyFetch} from '../http.js'\nimport {Variables, RequestDocument} from 'graphql-request'\nimport FormData from 'form-data'\nimport {Response} from 'node-fetch'\n\nexport async function request<T>(\n  oxygenAddress: string,\n  query: RequestDocument,\n  token: string,\n  variables?: Variables,\n): Promise<T> {\n  const headers = await buildHeaders(token)\n  debugLogRequest('Oxygen', query, variables, headers)\n  const client = await graphqlClient({\n    headers,\n    url: getOxygenAddress(oxygenAddress),\n  })\n\n  const response = await client.request<T>(query, variables)\n  return response\n}\n\nexport async function uploadDeploymentFile(oxygenAddress: string, token: string, data: FormData): Promise<Response> {\n  const headers = await buildHeaders(token)\n  delete headers['Content-Type']\n\n  const response = await shopifyFetch(getOxygenAddress(oxygenAddress), {\n    method: 'POST',\n    body: data,\n    headers: {\n      ...headers,\n      ...data.getHeaders(),\n    },\n  })\n\n  return response\n}\n\nconst getOxygenAddress = (oxygenHost: string): string => {\n  return `https://${oxygenHost}/api/graphql/deploy/v1`\n}\n"]}