import { identity } from '../environment/fqdn.js';
import { debug } from '../output.js';
import { shopifyFetch } from '../http.js';
export async function validateIdentityToken(token) {
    try {
        const instrospectionURL = await getInstrospectionEndpoint();
        const options = {
            method: 'POST',
            headers: { Authorization: `Bearer ${token}`, 'Content-Type': 'application/json' },
            body: JSON.stringify({ token }),
        };
        debug(`Sending Identity Introspection request to URL: ${instrospectionURL}`);
        const response = await shopifyFetch(instrospectionURL, options);
        // eslint-disable-next-line @typescript-eslint/no-explicit-any
        const json = await response.json();
        debug(`The identity token is valid: ${json.valid}`);
        return json.valid;
        // eslint-disable-next-line no-catch-all/no-catch-all
    }
    catch (error) {
        debug(`The identity token is invalid: ${error}`);
        return false;
    }
}
async function getInstrospectionEndpoint() {
    const response = await shopifyFetch(`https://${await identity()}/.well-known/openid-configuration.json`);
    // eslint-disable-next-line @typescript-eslint/no-explicit-any
    const json = await response.json();
    return json.introspection_endpoint;
}
//# sourceMappingURL=identity.js.map