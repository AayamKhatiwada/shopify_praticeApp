interface JSON {
    [key: string]: JSONValue;
}
declare type JSONValue = string | number | boolean | JSON | JSONValue[];
export interface PackageJSON extends JSON {
    name: string;
    author: string;
    dependencies: {
        [key: string]: string;
    };
    devDependencies: {
        [key: string]: string;
    };
    resolutions: {
        [key: string]: string;
    };
    overrides: {
        [key: string]: string;
    };
    scripts: {
        [key: string]: string;
    };
}
export declare function readPackageJSON(directory: string): Promise<PackageJSON>;
export declare function writePackageJSON(directory: string, packageJSON: JSON): Promise<void>;
export declare function updateAppData(packageJSON: JSON, name: string): Promise<void>;
export {};
