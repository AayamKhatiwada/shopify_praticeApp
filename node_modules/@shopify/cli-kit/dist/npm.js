import { join } from './path.js';
import * as file from './file.js';
import * as os from './os.js';
import { debug, token, content } from './output.js';
export async function readPackageJSON(directory) {
    debug(content `Reading and decoding the content from package.json at ${token.path(directory)}...`);
    const packagePath = join(directory, 'package.json');
    const packageJSON = JSON.parse(await file.read(packagePath));
    return packageJSON;
}
export async function writePackageJSON(directory, packageJSON) {
    debug(content `JSON-encoding and writing content to package.json at ${token.path(directory)}...`);
    const packagePath = join(directory, 'package.json');
    await file.write(packagePath, JSON.stringify(packageJSON, null, 2));
}
export async function updateAppData(packageJSON, name) {
    packageJSON.name = name;
    packageJSON.author = (await os.username()) ?? '';
}
//# sourceMappingURL=npm.js.map