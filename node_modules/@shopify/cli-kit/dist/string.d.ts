export { camelCase as camelize } from 'change-case';
export { paramCase as hyphenize } from 'change-case';
export { snakeCase as underscore } from 'change-case';
export { constantCase as constantize } from 'change-case';
/** Returns a random string */
export declare function randomHex(size: number): string;
export declare function generateRandomChallengePair(): {
    codeVerifier: string;
    codeChallenge: string;
};
export declare function hashString(str: string): string;
/**
 * Given a string, it returns it with the first letter capitalized.
 * @param string - String whose first letter will be caplitalized.
 * @returns The given string with its first letter capitalized.
 */
export declare function capitalize(string: string): string;
/**
 * Given a store, returns a valid store fqdn removing protocol and adding .myshopify.com domain
 * @param store - Original store name provided by the user
 * @returns a valid store fqdn
 */
export declare function normalizeStoreName(store: string): string;
/**
 * Try to convert a string to an int, falling back to undefined if unable to
 */
export declare function tryParseInt(maybeInt: string | undefined): number | undefined;
/**
 * Given a series of rows inside an array, where each row is an array of strings (representing columns)
 * Parse it into a single string with the columns aligned
 */
export declare function linesToColumns(lines: string[][]): string;
export declare const slugify: (str: string) => string;
