{"version":3,"file":"monorail.js","sourceRoot":"","sources":["../src/monorail.ts"],"names":[],"mappings":"AAAA,OAAO,EAAC,KAAK,EAAC,MAAM,WAAW,CAAA;AAC/B,OAAO,EAAC,KAAK,EAAE,OAAO,EAAE,KAAK,EAAC,MAAM,aAAa,CAAA;AAIjD,MAAM,GAAG,GAAG,iDAAiD,CAAA;AAI7D,mFAAmF;AACnF,MAAM,CAAC,MAAM,sBAAsB,GAAG,sBAA+B,CAAA;AA+GrE,MAAM,CAAC,KAAK,UAAU,YAAY,CAChC,QAAmB,EACnB,UAA8B,EAC9B,aAAoC;IAEpC,IAAI;QACF,MAAM,WAAW,GAAG,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,CAAA;QACxC,MAAM,OAAO,GAAG,EAAC,GAAG,UAAU,EAAE,GAAG,aAAa,EAAC,CAAA;QACjD,MAAM,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,EAAC,SAAS,EAAE,QAAQ,EAAE,OAAO,EAAC,CAAC,CAAA;QAC3D,MAAM,OAAO,GAAG,YAAY,CAAC,WAAW,CAAC,CAAA;QAEzC,MAAM,QAAQ,GAAG,MAAM,KAAK,CAAC,GAAG,EAAE,EAAC,MAAM,EAAE,MAAM,EAAE,IAAI,EAAE,OAAO,EAAC,CAAC,CAAA;QAElE,IAAI,QAAQ,CAAC,MAAM,KAAK,GAAG,EAAE;YAC3B,KAAK,CAAC,OAAO,CAAA,yBAAyB,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,CAAA;YAC5D,OAAO,EAAC,IAAI,EAAE,IAAI,EAAC,CAAA;SACpB;aAAM;YACL,KAAK,CAAC,qCAAqC,QAAQ,CAAC,UAAU,EAAE,CAAC,CAAA;YACjE,OAAO,EAAC,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,QAAQ,CAAC,UAAU,EAAC,CAAA;SACrD;QACD,qDAAqD;KACtD;IAAC,OAAO,KAAK,EAAE;QACd,IAAI,OAAO,GAAG,kCAAkC,CAAA;QAChD,IAAI,KAAK,YAAY,KAAK,EAAE;YAC1B,OAAO,GAAG,OAAO,CAAC,MAAM,CAAC,KAAK,KAAK,CAAC,OAAO,EAAE,CAAC,CAAA;SAC/C;QACD,KAAK,CAAC,OAAO,CAAC,CAAA;QACd,OAAO,EAAC,IAAI,EAAE,OAAO,EAAE,OAAO,EAAC,CAAA;KAChC;AACH,CAAC;AAED,MAAM,YAAY,GAAG,CAAC,WAAmB,EAAE,EAAE;IAC3C,OAAO;QACL,cAAc,EAAE,iCAAiC;QACjD,qCAAqC,EAAE,WAAW,CAAC,QAAQ,EAAE;QAC7D,kCAAkC,EAAE,WAAW,CAAC,QAAQ,EAAE;KAC3D,CAAA;AACH,CAAC,CAAA","sourcesContent":["import {fetch} from './http.js'\nimport {debug, content, token} from './output.js'\nimport {JsonMap} from './json.js'\nimport {DeepRequired} from './typing/deep-required.js'\n\nconst url = 'https://monorail-edge.shopifysvc.com/v1/produce'\n\ntype Optional<T> = T | null\n\n// This is the topic name of the main event we log to Monorail, the command tracker\nexport const MONORAIL_COMMAND_TOPIC = 'app_cli3_command/1.2' as const\n\nexport interface Schemas {\n  [MONORAIL_COMMAND_TOPIC]: {\n    sensitive: {\n      args: string\n      error_message?: Optional<string>\n      app_name?: Optional<string>\n      metadata?: Optional<string>\n      store_fqdn?: Optional<string>\n\n      // Dev related commands\n      cmd_dev_tunnel_custom?: Optional<string>\n\n      // Environment\n      env_plugin_installed_all?: Optional<string>\n    }\n    public: {\n      partner_id?: Optional<number>\n      command: string\n      project_type?: Optional<string>\n      time_start: number\n      time_end: number\n      total_time: number\n      success: boolean\n      api_key?: Optional<string>\n      cli_version: string\n      uname: string\n      ruby_version: string\n      node_version: string\n      is_employee: boolean\n      store_fqdn_hash?: Optional<string>\n\n      // Any and all commands\n      cmd_all_alias_used?: Optional<string>\n      cmd_all_launcher?: Optional<string>\n      cmd_all_path_override?: Optional<boolean>\n      cmd_all_path_override_hash?: Optional<string>\n      cmd_all_plugin?: Optional<string>\n      cmd_all_topic?: Optional<string>\n      cmd_all_verbose?: Optional<boolean>\n\n      // Any extension related command\n      cmd_extensions_binary_from_source?: Optional<boolean>\n\n      // Scaffolding related commands\n      cmd_scaffold_required_auth?: Optional<boolean>\n      cmd_scaffold_template_custom?: Optional<boolean>\n      cmd_scaffold_template_flavor?: Optional<string>\n      cmd_scaffold_type?: Optional<string>\n      cmd_scaffold_type_category?: Optional<string>\n      cmd_scaffold_type_gated?: Optional<boolean>\n      cmd_scaffold_type_owner?: Optional<string>\n      cmd_scaffold_used_prompts_for_type?: Optional<boolean>\n\n      // Used in several but not all commands\n      cmd_app_dependency_installation_skipped?: Optional<boolean>\n      cmd_app_reset_used?: Optional<boolean>\n\n      // Dev related commands\n      cmd_dev_tunnel_type?: Optional<string>\n      cmd_dev_tunnel_custom_hash?: Optional<string>\n      cmd_dev_urls_updated?: Optional<boolean>\n\n      // App setup\n      app_extensions_any?: Optional<boolean>\n      app_extensions_breakdown?: Optional<string>\n      app_extensions_count?: Optional<number>\n      app_extensions_custom_layout?: Optional<boolean>\n      app_extensions_function_any?: Optional<boolean>\n      app_extensions_function_count?: Optional<number>\n      app_extensions_function_custom_layout?: Optional<boolean>\n      app_extensions_theme_any?: Optional<boolean>\n      app_extensions_theme_count?: Optional<number>\n      app_extensions_theme_custom_layout?: Optional<boolean>\n      app_extensions_ui_any?: Optional<boolean>\n      app_extensions_ui_count?: Optional<number>\n      app_extensions_ui_custom_layout?: Optional<boolean>\n      app_name_hash?: Optional<string>\n      app_path_hash?: Optional<string>\n      app_scopes?: Optional<string>\n      app_web_backend_any?: Optional<boolean>\n      app_web_backend_count?: Optional<number>\n      app_web_custom_layout?: Optional<boolean>\n      app_web_framework?: Optional<string>\n      app_web_frontend_any?: Optional<boolean>\n      app_web_frontend_count?: Optional<number>\n\n      // Environment\n      env_ci?: Optional<boolean>\n      env_ci_platform?: Optional<string>\n      env_device_id?: Optional<string>\n      env_package_manager?: Optional<string>\n      env_package_manager_workspaces?: Optional<boolean>\n      env_plugin_installed_any_custom?: Optional<boolean>\n      env_plugin_installed_shopify?: Optional<string>\n      env_shell?: Optional<string>\n      env_web_ide?: Optional<string>\n      env_cloud?: Optional<string>\n    }\n  }\n  [schemaId: string]: {sensitive: JsonMap; public: JsonMap}\n}\n\n// In reality, we're normally most interested in just this from Schemas, so export it for ease of use.\n// The monorail schema itself has lots of optional values as it must be backwards-compatible. For our schema we want mandatory values instead.\nexport type MonorailEventPublic = DeepRequired<Schemas[typeof MONORAIL_COMMAND_TOPIC]['public']>\nexport type MonorailEventSensitive = Schemas[typeof MONORAIL_COMMAND_TOPIC]['sensitive']\n\ntype MonorailResult = {type: 'ok'} | {type: 'error'; message: string}\n\nexport async function publishEvent<TSchemaId extends keyof Schemas, TPayload extends Schemas[TSchemaId]>(\n  schemaId: TSchemaId,\n  publicData: TPayload['public'],\n  sensitiveData: TPayload['sensitive'],\n): Promise<MonorailResult> {\n  try {\n    const currentTime = new Date().getTime()\n    const payload = {...publicData, ...sensitiveData}\n    const body = JSON.stringify({schema_id: schemaId, payload})\n    const headers = buildHeaders(currentTime)\n\n    const response = await fetch(url, {method: 'POST', body, headers})\n\n    if (response.status === 200) {\n      debug(content`Analytics event sent: ${token.json(payload)}`)\n      return {type: 'ok'}\n    } else {\n      debug(`Failed to report usage analytics: ${response.statusText}`)\n      return {type: 'error', message: response.statusText}\n    }\n    // eslint-disable-next-line no-catch-all/no-catch-all\n  } catch (error) {\n    let message = 'Failed to report usage analytics'\n    if (error instanceof Error) {\n      message = message.concat(`: ${error.message}`)\n    }\n    debug(message)\n    return {type: 'error', message}\n  }\n}\n\nconst buildHeaders = (currentTime: number) => {\n  return {\n    'Content-Type': 'application/json; charset=utf-8',\n    'X-Monorail-Edge-Event-Created-At-Ms': currentTime.toString(),\n    'X-Monorail-Edge-Event-Sent-At-Ms': currentTime.toString(),\n  }\n}\n"]}