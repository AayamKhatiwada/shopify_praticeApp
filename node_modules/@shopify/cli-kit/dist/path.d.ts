/// <reference types="node" />
import { OverloadParameters } from './typing/overloaded-parameters.js';
import { relative, dirname, join, normalize, resolve, basename, extname, isAbsolute, parse } from 'pathe';
import { findUp as internalFindUp } from 'find-up';
export { join, relative, dirname, normalize, resolve, basename, extname, isAbsolute, parse };
export { default as glob } from 'fast-glob';
export { pathToFileURL } from 'node:url';
export declare function findUp(matcher: OverloadParameters<typeof internalFindUp>[0], options: OverloadParameters<typeof internalFindUp>[1]): ReturnType<typeof internalFindUp>;
/**
 * Given an absolute filesystem path, it makes it relative to
 * the current working directory. This is useful when logging paths
 * to allow the users to click on the file and let the OS open it
 * in the editor of choice.
 * @param path - Path to relativize
 * @returns Relativized path.
 */
export declare function relativize(path: string): string;
/**
 * Given a module's import.meta.url it returns the directory containing the module.
 * @param moduleURL - The value of import.meta.url in the context of the caller module.
 * @returns The path to the directory containing the caller module.
 */
export declare function moduleDirectory(moduleURL: string | URL): string;
