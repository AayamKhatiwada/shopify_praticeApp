{"version":3,"file":"input.js","sourceRoot":"","sources":["../../../src/ui/inquirer/input.ts"],"names":[],"mappings":"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","sourcesContent":["import colors from '../../public/node/colors.js'\nimport Input from 'inquirer/lib/prompts/input.js'\nimport inquirer from 'inquirer'\nimport readline, {Interface} from 'readline'\n\nexport class CustomInput extends Input {\n  protected isPassword: boolean\n\n  constructor(questions: inquirer.Question<inquirer.Answers>, rl: Interface, answers: inquirer.Answers) {\n    super(questions, rl, answers)\n    this.isPassword = false\n  }\n\n  protected render(error?: string): void {\n    const color = colors.magenta\n    const isFinal = this.status === 'answered'\n\n    let prompt = this.getQuestion()\n\n    let bottomContent = ''\n    if (isFinal) {\n      prompt += `${colors.dim('·')} ${color(this.formatContent(this.answer))}`\n    } else {\n      prompt += `\\n${color('>')} ${this.rl.line ? this.formatContent(this.rl.line) : color.dim(this.opt.default)}`\n      bottomContent = '─'.repeat(Math.max(this.rl.line.length, 30))\n      bottomContent = `  ${color(bottomContent)}`\n      if (error) {\n        bottomContent += `\\n\\n  ${colors.red(`! ${error}`)}`\n      }\n    }\n    this.screen.render(prompt, bottomContent)\n    if (!isFinal && !this.rl.line) {\n      readline.cursorTo(process.stdout, 2)\n    }\n  }\n\n  protected getQuestion() {\n    return `${this.prefix()} ${colors.bold(this.opt.message)}${this.opt.suffix}${colors.reset(' ')}`\n  }\n\n  protected prefix() {\n    const color = colors.magenta.bold\n    return this.status === 'answered' ? color('✔') : color('?')\n  }\n\n  protected onError(data: {isValid: string; value: string}) {\n    this.rl.write(data.value === this.opt.default ? '' : data.value)\n    this.render(data.isValid)\n  }\n\n  private formatContent(content: string): string {\n    return this.isPassword ? colors.gray('*'.repeat(content.length)) : content\n  }\n}\n"]}