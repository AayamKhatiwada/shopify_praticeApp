{"version":3,"file":"ui.js","sourceRoot":"","sources":["../../src/testing/ui.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,IAAI,MAAM,YAAY,CAAA;AAClC,OAAO,EAAoB,SAAS,EAAC,MAAM,OAAO,CAAA;AAIlD,MAAM,CAAC,MAAM,GAAG,GAAQ,CAAC,OAAO,EAAE,KAAK,EAAE,EAAE;IACzC,MAAM,GAAG,GAAG;QACV,GAAG,OAAO,CAAC,GAAG;QACd,GAAG,KAAK,EAAE,GAAG;QACb,iEAAiE;QACjE,sDAAsD;QACtD,6DAA6D;QAC7D,8CAA8C;QAC9C,EAAE,EAAE,MAAM;KACX,CAAA;IAED,oFAAoF;IACpF,OAAO,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE,+BAA+B,OAAO,KAAK,CAAC,EAAE;QACrF,GAAG,EAAE,SAAS;QACd,GAAG;KACJ,CAAC,CAAA;AACJ,CAAC,CAAA","sourcesContent":["import * as path from '../path.js'\nimport {ExecaChildProcess, execaNode} from 'execa'\n\ntype Run = (fixture: string, props?: {env?: {[key: string]: unknown}}) => ExecaChildProcess<string>\n\nexport const run: Run = (fixture, props) => {\n  const env = {\n    ...process.env,\n    ...props?.env,\n    // we need this because ink treats the CI environment differently\n    // by only writing the last frame to stdout on unmount\n    // See more here https://github.com/vadimdemedes/ink/pull/266\n    // this way local and CI tests behave the same\n    CI: 'true',\n  }\n\n  // we want to load the compiled js directly in order avoid unnecessary transpilation\n  return execaNode(path.resolve(__dirname, `../../dist/testing/fixtures/${fixture}.js`), {\n    cwd: __dirname,\n    env,\n  })\n}\n"]}