{"version":3,"file":"constants.js","sourceRoot":"","sources":["../../src/cli/constants.ts"],"names":[],"mappings":"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","sourcesContent":["import {DependencyVersion} from '@shopify/cli-kit/node/node-package-manager'\n\nexport const configurationFileNames = {\n  app: 'shopify.app.toml',\n  extension: {\n    ui: 'shopify.ui.extension.toml',\n    theme: 'shopify.theme.extension.toml',\n    function: 'shopify.function.extension.toml',\n  },\n  web: 'shopify.web.toml',\n} as const\n\nexport const dotEnvFileNames = {\n  production: '.env',\n}\n\nexport const environmentVariables = {\n  /**\n   * Environment variable to instructs the CLI on running the extensions' CLI through its sources.\n   */\n  useExtensionsCLISources: 'SHOPIFY_USE_EXTENSIONS_CLI_SOURCES',\n} as const\n\nexport const versions = {\n  react: '^17.0.0',\n  reactTypes: '17.0.30',\n} as const\n\nexport const blocks = {\n  extensions: {\n    directoryName: 'extensions',\n    configurationName: configurationFileNames.extension,\n  },\n  functions: {\n    defaultUrl: 'https://github.com/Shopify/function-examples',\n    defaultLanguage: 'wasm',\n  },\n  web: {\n    directoryName: 'web',\n    configurationName: configurationFileNames.web,\n  },\n} as const\n\n/**\n * List of extensions for each category that are limited by quantity, only 1 of each is allowed per app\n */\nexport const limitedExtensions: {\n  ui: UIExtensionTypes[]\n  theme: ThemeExtensionTypes[]\n  function: FunctionExtensionTypes[]\n} = {\n  ui: ['product_subscription', 'checkout_post_purchase', 'web_pixel_extension'],\n  theme: ['theme'],\n  function: [],\n}\n\nexport const publicFunctionExtensions = {\n  types: ['product_discounts', 'order_discounts', 'shipping_discounts'],\n} as const\nexport const functionExtensions = {\n  types: [\n    ...publicFunctionExtensions.types,\n    'shipping_rate_presenter',\n    'payment_customization',\n    'delivery_customization',\n  ],\n} as const\n\nexport const functionExtensionTemplates = [\n  {name: 'Wasm', value: 'wasm'},\n  {name: 'Rust', value: 'rust'},\n]\n\nexport function isFunctionExtensionType(extensionType: string) {\n  return (functionExtensions.types as ReadonlyArray<string>).includes(extensionType)\n}\n\nexport const publicUIExtensions = {\n  types: ['product_subscription', 'checkout_ui_extension', 'checkout_post_purchase', 'web_pixel_extension'],\n} as const\n\nexport const uiExtensions = {\n  types: [...publicUIExtensions.types, 'pos_ui_extension', 'customer_accounts_ui_extension'],\n} as const\n\nexport const activeUIExtensions = {\n  types: [...publicUIExtensions.types, 'pos_ui_extension', 'customer_accounts_ui_extension'].filter,\n}\n\nexport type UIExtensionTypes = typeof uiExtensions.types[number]\n\nexport const uiExtensionTemplates = [\n  {name: 'TypeScript', value: 'typescript'},\n  {name: 'JavaScript', value: 'vanilla-js'},\n  {name: 'TypeScript React', value: 'typescript-react'},\n  {name: 'JavaScript React', value: 'react'},\n]\n\nexport function isUiExtensionType(extensionType: string) {\n  return (uiExtensions.types as ReadonlyArray<string>).includes(extensionType)\n}\n\nexport const themeExtensions = {\n  types: ['theme'],\n} as const\n\nexport type ThemeExtensionTypes = typeof themeExtensions.types[number]\n\nexport function isThemeExtensionType(extensionType: string) {\n  return (themeExtensions.types as ReadonlyArray<string>).includes(extensionType)\n}\n\nexport type FunctionExtensionTypes = typeof functionExtensions.types[number]\n\nexport const extensions = {\n  types: [...themeExtensions.types, ...uiExtensions.types, ...functionExtensions.types],\n  publicTypes: [...themeExtensions.types, ...publicUIExtensions.types, ...publicFunctionExtensions.types],\n}\n\nexport type ExtensionTypes = typeof extensions.types[number]\ntype PublicExtensionTypes = typeof extensions.publicTypes[number]\ntype GatedExtensionTypes = Exclude<ExtensionTypes, PublicExtensionTypes>\n\nexport function extensionTypeCategory(extensionType: ExtensionTypes): 'theme' | 'function' | 'ui' {\n  if (extensionType === 'theme') {\n    return 'theme'\n  }\n  if ((functionExtensions.types as ReadonlyArray<string>).includes(extensionType)) {\n    return 'function'\n  }\n  return 'ui'\n}\n\nexport function extensionTypeIsGated(extensionType: ExtensionTypes): extensionType is GatedExtensionTypes {\n  return !extensions.publicTypes.includes(extensionType as PublicExtensionTypes)\n}\n\n/**\n * Returns the runtime renderer dependency for a given UI extension type.\n * @param extensionType - Extension type.\n * @returns The renderer dependency that should be present in the app's package.json\n */\nexport function getUIExtensionRendererDependency(extensionType: UIExtensionTypes): DependencyVersion | undefined {\n  switch (extensionType) {\n    case 'product_subscription':\n      return {name: '@shopify/admin-ui-extensions-react', version: '^1.0.1'}\n    case 'checkout_ui_extension':\n      return {name: '@shopify/checkout-ui-extensions-react', version: '^0.20.0'}\n    case 'checkout_post_purchase':\n      return {name: '@shopify/post-purchase-ui-extensions-react', version: '^0.13.2'}\n    case 'pos_ui_extension':\n      return {name: '@shopify/retail-ui-extensions-react', version: '^0.19.0'}\n    case 'customer_accounts_ui_extension':\n      return {name: '@shopify/customer-account-ui-extensions-react', version: '^0.0.5'}\n    case 'web_pixel_extension':\n      return {name: '@shopify/web-pixels-extension', version: '^0.1.1'}\n  }\n}\n\nexport const uiExternalExtensionTypes = {\n  types: ['web_pixel', 'post_purchase_ui', 'checkout_ui', 'pos_ui', 'subscription_ui', 'customer_accounts_ui'],\n} as const\n\nexport type UIExternalExtensionTypes = typeof uiExternalExtensionTypes.types[number]\n\nexport const themeExternalExtensionTypes = {\n  types: ['theme_app_extension'],\n} as const\n\nexport type ThemeExternalExtensionTypes = typeof themeExternalExtensionTypes.types[number]\n\nexport const functionExternalExtensionTypes = {\n  types: [\n    'product_discount',\n    'order_discount',\n    'shipping_discount',\n    'payment_customization',\n    'delivery_option_presenter',\n    'delivery_customization',\n  ],\n} as const\n\nexport type FunctionExternalExtensionTypes = typeof functionExternalExtensionTypes.types[number]\n\nexport const externalExtensionTypes = {\n  types: [\n    ...uiExternalExtensionTypes.types,\n    ...themeExternalExtensionTypes.types,\n    ...functionExternalExtensionTypes.types,\n  ],\n} as const\n\nexport type ExternalExtensionTypes = typeof externalExtensionTypes.types[number]\n\n// The order of the groups in extensionTypesGroups will be the same displayed in the select prompt\nexport const extensionTypesGroups: {name: string; extensions: ExtensionTypes[]}[] = [\n  {name: 'Online store', extensions: ['theme']},\n  {\n    name: 'Discounts and checkout',\n    extensions: [\n      'product_discounts',\n      'order_discounts',\n      'shipping_discounts',\n      'checkout_ui_extension',\n      'checkout_post_purchase',\n    ],\n  },\n  {name: 'Analytics', extensions: ['web_pixel_extension']},\n  {name: 'Merchant admin', extensions: ['product_subscription']},\n  {\n    name: 'Shopify private',\n    extensions: [\n      'customer_accounts_ui_extension',\n      'payment_customization',\n      'delivery_customization',\n      'pos_ui_extension',\n      'shipping_rate_presenter',\n    ],\n  },\n]\n\nexport const externalExtensionTypeNames = {\n  types: [\n    'Web pixel',\n    'Post-purchase UI',\n    'Theme app extension',\n    'Checkout UI',\n    'POS UI',\n    'Customer accounts UI',\n    'Subscription UI',\n    'Function - Product discount',\n    'Function - Order discount',\n    'Function - Shipping discount',\n    'Payment customization',\n    'Delivery option presenter',\n    'Delivery customization',\n  ],\n} as const\n\nexport type ExternalExtensionTypeNames = typeof externalExtensionTypeNames.types[number]\nexport interface ExtensionOutputConfig {\n  humanKey: ExternalExtensionTypeNames\n  helpURL?: string\n  additionalHelp?: string\n}\n\nexport function getExtensionOutputConfig(extensionType: ExtensionTypes): ExtensionOutputConfig {\n  switch (extensionType) {\n    case 'web_pixel_extension':\n      return buildExtensionOutputConfig('Web pixel')\n    case 'checkout_post_purchase':\n      return buildExtensionOutputConfig('Post-purchase UI', 'https://shopify.dev/apps/checkout/post-purchase')\n    case 'theme':\n      return buildExtensionOutputConfig('Theme app extension')\n    case 'checkout_ui_extension':\n      return buildExtensionOutputConfig('Checkout UI')\n    case 'customer_accounts_ui_extension':\n      return buildExtensionOutputConfig('Customer accounts UI')\n    case 'product_subscription':\n      return buildExtensionOutputConfig('Subscription UI')\n    case 'pos_ui_extension':\n      return buildExtensionOutputConfig('POS UI')\n    case 'product_discounts':\n      return buildExtensionOutputConfig(\n        'Function - Product discount',\n        'https://shopify.dev/apps/subscriptions/discounts',\n      )\n    case 'order_discounts':\n      return buildExtensionOutputConfig('Function - Order discount', 'https://shopify.dev/apps/subscriptions/discounts')\n    case 'shipping_discounts':\n      return buildExtensionOutputConfig(\n        'Function - Shipping discount',\n        'https://shopify.dev/apps/subscriptions/discounts',\n      )\n    case 'payment_customization':\n      return buildExtensionOutputConfig('Payment customization')\n    case 'shipping_rate_presenter':\n      return buildExtensionOutputConfig('Delivery option presenter')\n    case 'delivery_customization':\n      return buildExtensionOutputConfig('Delivery customization')\n  }\n}\n\n/**\n * Each extension has a different ID in GraphQL.\n * Sometimes the ID is the same as the type, sometimes it's different.\n * @param type - The extension type\n * @returns The extension GraphQL ID\n */\nexport const extensionGraphqlId = (type: ExtensionTypes) => {\n  switch (type) {\n    case 'product_subscription':\n      return 'SUBSCRIPTION_MANAGEMENT'\n    case 'checkout_ui_extension':\n      return 'CHECKOUT_UI_EXTENSION'\n    case 'checkout_post_purchase':\n      return 'CHECKOUT_POST_PURCHASE'\n    case 'pos_ui_extension':\n      return 'POS_UI_EXTENSION'\n    case 'theme':\n      return 'THEME_APP_EXTENSION'\n    case 'web_pixel_extension':\n      return 'WEB_PIXEL_EXTENSION'\n    case 'customer_accounts_ui_extension':\n      return 'CUSTOMER_ACCOUNTS_UI_EXTENSION'\n    case 'product_discounts':\n    case 'order_discounts':\n    case 'shipping_discounts':\n    case 'payment_customization':\n    case 'delivery_customization':\n    case 'shipping_rate_presenter':\n      // As we add new extensions, this bug will force us to add a new case here.\n      return type.toUpperCase()\n  }\n}\n\nfunction buildExtensionOutputConfig(humanKey: ExternalExtensionTypeNames, helpURL?: string, additionalHelp?: string) {\n  return {\n    humanKey,\n    helpURL,\n    additionalHelp,\n  }\n}\n"]}