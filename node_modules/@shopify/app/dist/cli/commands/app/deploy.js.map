{"version":3,"file":"deploy.js","sourceRoot":"","sources":["../../../../src/cli/commands/app/deploy.ts"],"names":[],"mappings":"AAAA,OAAO,EAAC,QAAQ,EAAC,MAAM,gBAAgB,CAAA;AACvC,OAAO,EAAC,MAAM,EAAC,MAAM,0BAA0B,CAAA;AAE/C,OAAO,EAAC,IAAI,IAAI,OAAO,EAAC,MAAM,4BAA4B,CAAA;AAC1D,OAAO,OAAO,MAAM,gCAAgC,CAAA;AACpD,OAAO,EAAC,KAAK,EAAC,MAAM,aAAa,CAAA;AACjC,OAAO,EAAC,IAAI,EAAE,GAAG,EAAE,QAAQ,EAAC,MAAM,kBAAkB,CAAA;AAEpD,MAAM,CAAC,OAAO,OAAO,MAAO,SAAQ,OAAO;IAmBzC,KAAK,CAAC,GAAG;QACP,MAAM,EAAC,IAAI,EAAE,KAAK,EAAC,GAAG,MAAM,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAA;QAE9C,MAAM,QAAQ,CAAC,SAAS,CAAC,GAAG,EAAE,CAAC,CAAC;YAC9B,kBAAkB,EAAE,KAAK,CAAC,KAAK;SAChC,CAAC,CAAC,CAAA;QAEH,MAAM,SAAS,GAAG,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,GAAG,EAAE,CAAA;QACvE,MAAM,GAAG,GAAiB,MAAM,OAAO,CAAC,SAAS,CAAC,CAAA;QAClD,MAAM,MAAM,CAAC,EAAC,GAAG,EAAE,MAAM,EAAE,KAAK,CAAC,SAAS,CAAC,EAAE,KAAK,EAAE,KAAK,CAAC,KAAK,EAAC,CAAC,CAAA;IACnE,CAAC;;AA5BM,kBAAW,GAAG,yBAAyB,CAAA;AAEvC,YAAK,GAAG;IACb,GAAG,GAAG,CAAC,WAAW;IAClB,GAAG,QAAQ;IACX,SAAS,EAAE,KAAK,CAAC,MAAM,CAAC;QACtB,MAAM,EAAE,KAAK;QACb,WAAW,EAAE,0BAA0B;QACvC,GAAG,EAAE,0BAA0B;KAChC,CAAC;IACF,KAAK,EAAE,KAAK,CAAC,OAAO,CAAC;QACnB,MAAM,EAAE,KAAK;QACb,WAAW,EAAE,0BAA0B;QACvC,GAAG,EAAE,oBAAoB;QACzB,OAAO,EAAE,KAAK;KACf,CAAC;CACH,CAAA","sourcesContent":["import {appFlags} from '../../flags.js'\nimport {deploy} from '../../services/deploy.js'\nimport {AppInterface} from '../../models/app/app.js'\nimport {load as loadApp} from '../../models/app/loader.js'\nimport Command from '../../utilities/app-command.js'\nimport {Flags} from '@oclif/core'\nimport {path, cli, metadata} from '@shopify/cli-kit'\n\nexport default class Deploy extends Command {\n  static description = 'Deploy your Shopify app'\n\n  static flags = {\n    ...cli.globalFlags,\n    ...appFlags,\n    'api-key': Flags.string({\n      hidden: false,\n      description: 'The API key of your app.',\n      env: 'SHOPIFY_FLAG_APP_API_KEY',\n    }),\n    reset: Flags.boolean({\n      hidden: false,\n      description: 'Reset all your settings.',\n      env: 'SHOPIFY_FLAG_RESET',\n      default: false,\n    }),\n  }\n\n  async run(): Promise<void> {\n    const {args, flags} = await this.parse(Deploy)\n\n    await metadata.addPublic(() => ({\n      cmd_app_reset_used: flags.reset,\n    }))\n\n    const directory = flags.path ? path.resolve(flags.path) : process.cwd()\n    const app: AppInterface = await loadApp(directory)\n    await deploy({app, apiKey: flags['api-key'], reset: flags.reset})\n  }\n}\n"]}