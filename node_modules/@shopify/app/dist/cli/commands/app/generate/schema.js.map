{"version":3,"file":"schema.js","sourceRoot":"","sources":["../../../../../src/cli/commands/app/generate/schema.ts"],"names":[],"mappings":"AAAA,OAAO,EAAC,qBAAqB,EAAC,MAAM,sCAAsC,CAAA;AAC1E,OAAO,EAAC,QAAQ,EAAC,MAAM,mBAAmB,CAAA;AAE1C,OAAO,EAAC,IAAI,IAAI,OAAO,EAAC,MAAM,+BAA+B,CAAA;AAC7D,OAAO,EAAC,KAAK,EAAC,MAAM,aAAa,CAAA;AACjC,OAAO,OAAO,MAAM,oCAAoC,CAAA;AACxD,OAAO,EAAC,IAAI,EAAE,KAAK,EAAE,GAAG,EAAE,MAAM,EAAC,MAAM,kBAAkB,CAAA;AAEzD,MAAM,CAAC,OAAO,OAAO,cAAe,SAAQ,OAAO;IAgB1C,KAAK,CAAC,GAAG;QACd,MAAM,EAAC,KAAK,EAAE,IAAI,EAAC,GAAG,MAAM,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,CAAA;QACtD,MAAM,MAAM,GAAG,KAAK,CAAC,SAAS,CAAC,CAAA;QAC/B,MAAM,SAAS,GAAG,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,GAAG,EAAE,CAAA;QACvE,MAAM,GAAG,GAAiB,MAAM,OAAO,CAAC,SAAS,CAAC,CAAA;QAClD,MAAM,SAAS,GAAG,GAAG,CAAC,UAAU,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,SAAS,EAAE,EAAE,CAAC,SAAS,CAAC,eAAe,KAAK,IAAI,CAAC,QAAQ,CAAC,CAAA;QAE1G,IAAI,CAAC,SAAS,EAAE;YACd,MAAM,SAAS,GAAG,GAAG,CAAC,UAAU,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,SAAS,EAAE,EAAE,CAAC,SAAS,CAAC,eAAe,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;YAElG,MAAM,IAAI,KAAK,CAAC,KAAK,CACnB,MAAM,CAAC,OAAO,CAAA,qBAAqB,IAAI,CAAC,QAAQ,qBAAqB,EACrE,MAAM,CAAC,OAAO,CAAA,uCAAuC,SAAS,EAAE,CACjE,CAAA;SACF;QAED,MAAM,CAAC,IAAI,CAAC,MAAM,qBAAqB,CAAC,EAAC,GAAG,EAAE,SAAS,EAAE,MAAM,EAAC,CAAC,CAAC,CAAA;IACpE,CAAC;;AAhCM,0BAAW,GAAG,2CAA2C,CAAA;AAEzD,oBAAK,GAAG;IACb,GAAG,GAAG,CAAC,WAAW;IAClB,GAAG,QAAQ;IACX,SAAS,EAAE,KAAK,CAAC,MAAM,CAAC;QACtB,IAAI,EAAE,SAAS;QACf,WAAW,EAAE,uCAAuC;QACpD,QAAQ,EAAE,KAAK;QACf,GAAG,EAAE,0BAA0B;KAChC,CAAC;CACH,CAAA;AAEM,mBAAI,GAAG,CAAC,EAAC,IAAI,EAAE,UAAU,EAAE,QAAQ,EAAE,IAAI,EAAE,WAAW,EAAE,mDAAmD,EAAC,CAAC,CAAA","sourcesContent":["import {generateSchemaService} from '../../../services/generate-schema.js'\nimport {appFlags} from '../../../flags.js'\nimport {AppInterface} from '../../../models/app/app.js'\nimport {load as loadApp} from '../../../models/app/loader.js'\nimport {Flags} from '@oclif/core'\nimport Command from '@shopify/cli-kit/node/base-command'\nimport {path, error, cli, output} from '@shopify/cli-kit'\n\nexport default class GenerateSchema extends Command {\n  static description = 'Generates a GraphQL schema for a function'\n\n  static flags = {\n    ...cli.globalFlags,\n    ...appFlags,\n    'api-key': Flags.string({\n      name: 'API key',\n      description: 'The API key to fetch the schema with.',\n      required: false,\n      env: 'SHOPIFY_FLAG_APP_API_KEY',\n    }),\n  }\n\n  static args = [{name: 'function', required: true, description: 'The name of the function to fetch the schema for.'}]\n\n  public async run(): Promise<void> {\n    const {flags, args} = await this.parse(GenerateSchema)\n    const apiKey = flags['api-key']\n    const directory = flags.path ? path.resolve(flags.path) : process.cwd()\n    const app: AppInterface = await loadApp(directory)\n    const extension = app.extensions.function.find((extension) => extension.localIdentifier === args.function)\n\n    if (!extension) {\n      const functions = app.extensions.function.map((extension) => extension.localIdentifier).join(', ')\n\n      throw new error.Abort(\n        output.content`No function named ${args.function} found in this app.`,\n        output.content`Use one of the available functions: ${functions}`,\n      )\n    }\n\n    output.info(await generateSchemaService({app, extension, apiKey}))\n  }\n}\n"]}