{"version":3,"file":"fetch-product-variant.js","sourceRoot":"","sources":["../../../../src/cli/utilities/extensions/fetch-product-variant.ts"],"names":[],"mappings":"AAAA,OAAO,EAAC,uCAAuC,EAAC,MAAM,kBAAkB,CAAA;AACxE,OAAO,EAAC,GAAG,EAAE,KAAK,EAAE,OAAO,EAAC,MAAM,kBAAkB,CAAA;AAEpD,MAAM,eAAe,GAAG,CAAC,SAAiB,EAAE,EAAE;IAC5C,OAAO,IAAI,KAAK,CAAC,KAAK,CACpB,kCAAkC,EAClC,2DAA2D,uCAAuC,CAChG,uBAAuB,CACxB;0CACqC,SAAS,qBAAqB,CACrE,CAAA;AACH,CAAC,CAAA;AAED;;;;GAIG;AACH,MAAM,CAAC,KAAK,UAAU,mBAAmB,CAAC,KAAa;IACrD,MAAM,YAAY,GAAG,MAAM,OAAO,CAAC,wBAAwB,CAAC,KAAK,CAAC,CAAA;IAClE,MAAM,KAAK,GAAG,GAAG,CAAC,OAAO,CAAC,uBAAuB,CAAA;IACjD,MAAM,MAAM,GAAyC,MAAM,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,EAAE,YAAY,CAAC,CAAA;IACjG,MAAM,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAA;IACtC,IAAI,QAAQ,CAAC,MAAM,KAAK,CAAC;QAAE,MAAM,eAAe,CAAC,KAAK,CAAC,CAAA;IACvD,MAAM,UAAU,GAAG,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAE,CAAC,IAAI,CAAC,EAAE,CAAA;IAC5E,MAAM,SAAS,GAAG,UAAU,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,CAAA;IAC7C,OAAO,SAAS,CAAA;AAClB,CAAC","sourcesContent":["import {mapExtensionTypeToExternalExtensionType} from './name-mapper.js'\nimport {api, error, session} from '@shopify/cli-kit'\n\nconst NoProductsError = (storeFqdn: string) => {\n  return new error.Abort(\n    'Could not find a product variant',\n    `Your store needs to have at least one product to test a ${mapExtensionTypeToExternalExtensionType(\n      'checkout_ui_extension',\n    )}\\n\nYou can add a new product here: https://${storeFqdn}/admin/products/new`,\n  )\n}\n\n/**\n * Retrieve the first variant of the first product of the given store\n * @param store - Store FQDN\n * @returns variantID if exists\n */\nexport async function fetchProductVariant(store: string) {\n  const adminSession = await session.ensureAuthenticatedAdmin(store)\n  const query = api.graphql.FindProductVariantQuery\n  const result: api.graphql.FindProductVariantSchema = await api.admin.request(query, adminSession)\n  const products = result.products.edges\n  if (products.length === 0) throw NoProductsError(store)\n  const variantURL = result.products.edges[0]!.node.variants.edges[0]!.node.id\n  const variantId = variantURL.split('/').pop()\n  return variantId\n}\n"]}