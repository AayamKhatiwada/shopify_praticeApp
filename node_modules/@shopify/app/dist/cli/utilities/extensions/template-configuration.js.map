{"version":3,"file":"template-configuration.js","sourceRoot":"","sources":["../../../../src/cli/utilities/extensions/template-configuration.ts"],"names":[],"mappings":"AAAA,OAAO,EAAC,iBAAiB,EAAE,oBAAoB,EAAC,MAAM,oBAAoB,CAAA;AAE1E,MAAM,UAAU,uBAAuB,CAAC,aAAqB;IAC3D,IAAI,eAAe,GAAa,EAAE,CAAA;IAClC,IAAI,aAAa,KAAK,qBAAqB,EAAE;QAC3C,eAAe,GAAG,CAAC,GAAG,eAAe,EAAE,OAAO,EAAE,kBAAkB,CAAC,CAAA;KACpE;IACD,OAAO,oBAAoB,CAAC,MAAM,CAAC,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC,eAAe,CAAC,QAAQ,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAA;AAC7F,CAAC;AAED,MAAM,UAAU,0BAA0B,CAAC,aAAqB,EAAE,wBAAiC;IACjG,OAAO,CACL,iBAAiB,CAAC,aAAa,CAAC;QAChC,OAAO,CACL,uBAAuB,CAAC,aAAa,CAAC,CAAC,IAAI,CACzC,CAAC,iBAAiB,EAAE,EAAE,CAAC,iBAAiB,CAAC,KAAK,KAAK,wBAAwB,CAC5E,CACF,CACF,CAAA;AACH,CAAC","sourcesContent":["import {isUiExtensionType, uiExtensionTemplates} from '../../constants.js'\n\nexport function getUIExtensionTemplates(extensionType: string): {name: string; value: string}[] {\n  let filteredFlavors: string[] = []\n  if (extensionType === 'web_pixel_extension') {\n    filteredFlavors = [...filteredFlavors, 'react', 'typescript-react']\n  }\n  return uiExtensionTemplates.filter((template) => !filteredFlavors.includes(template.value))\n}\n\nexport function isValidUIExtensionTemplate(extensionType: string, uiExtensionTemplateValue?: string): boolean {\n  return (\n    isUiExtensionType(extensionType) &&\n    Boolean(\n      getUIExtensionTemplates(extensionType).find(\n        (extensionTemplate) => extensionTemplate.value === uiExtensionTemplateValue,\n      ),\n    )\n  )\n}\n"]}