{"version":3,"file":"theme.js","sourceRoot":"","sources":["../../../../src/cli/validators/extensions/theme.ts"],"names":[],"mappings":"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","sourcesContent":["import {ThemeExtension} from '../../models/app/extensions.js'\nimport {error, file, output, path} from '@shopify/cli-kit'\n\ninterface FilenameValidation {\n  validator: RegExp\n  failureMessage: (filename: string) => string\n}\n\nconst kilobytes = 1024\nconst megabytes = kilobytes * 1024\n\nconst BUNDLE_SIZE_LIMIT_MB = 10\nconst BUNDLE_SIZE_LIMIT = BUNDLE_SIZE_LIMIT_MB * megabytes\nconst LIQUID_SIZE_LIMIT_KB = 100\nconst LIQUID_SIZE_LIMIT = LIQUID_SIZE_LIMIT_KB * kilobytes\n\nconst SUPPORTED_ASSET_EXTS = ['.jpg', '.js', '.css', '.png', '.svg']\nconst SUPPORTED_LOCALE_EXTS = ['.json']\nconst SUPPORTED_EXTS: {[dirname: string]: FilenameValidation} = {\n  assets: {\n    validator: new RegExp(`${SUPPORTED_ASSET_EXTS.join('|')}$`),\n    failureMessage: (filename: string) =>\n      `Only these filetypes are supported in assets: ${SUPPORTED_ASSET_EXTS.join(', ')}`,\n  },\n  blocks: {\n    validator: /.liquid$/,\n    failureMessage: (filename: string) => `Only .liquid files are allowed in blocks.`,\n  },\n  locales: {\n    validator: new RegExp(`${SUPPORTED_LOCALE_EXTS.join('|')}$`),\n    failureMessage: (filename: string) =>\n      `Only these filetypes are supported in locales: ${SUPPORTED_LOCALE_EXTS.join(', ')}`,\n  },\n  snippets: {\n    validator: /.liquid$/,\n    failureMessage: (filename: string) => `Only .liquid files are allowed in snippets.`,\n  },\n}\nconst SUPPORTED_BUCKETS = Object.keys(SUPPORTED_EXTS)\n\nexport async function validateThemeExtensions(extensions: ThemeExtension[]) {\n  await Promise.all(extensions.map((extension) => validateThemeExtension(extension)))\n}\n\nasync function validateThemeExtension(extension: ThemeExtension): Promise<void> {\n  const themeFiles = await path.glob(path.join(extension.directory, '*/*'))\n  const liquidBytes: number[] = []\n  const extensionBytes: number[] = []\n  await Promise.all(\n    themeFiles.map(async (filepath) => {\n      const relativePath = path.relative(extension.directory, filepath)\n      const dirname = path.dirname(relativePath)\n      validateFile(relativePath, dirname)\n      const filesize = await file.size(filepath)\n      extensionBytes.push(filesize)\n      if (['blocks', 'snippets'].includes(dirname)) liquidBytes.push(filesize)\n    }),\n  )\n  validateExtensionBytes(arraySum(extensionBytes))\n  validateLiquidBytes(arraySum(liquidBytes))\n}\n\nfunction validateExtensionBytes(extensionBytesTotal: number): void {\n  if (extensionBytesTotal > BUNDLE_SIZE_LIMIT) {\n    const humanBundleSize = `${(extensionBytesTotal / megabytes).toFixed(2)} MB`\n    throw new error.Abort(\n      `Your theme app extension exceeds the file size limit (${BUNDLE_SIZE_LIMIT_MB} MB). It's currently ${humanBundleSize}.`,\n      `Reduce your total file size and try again.`,\n    )\n  }\n}\n\nfunction validateLiquidBytes(liquidBytesTotal: number): void {\n  if (liquidBytesTotal > LIQUID_SIZE_LIMIT) {\n    const humanLiquidSize = `${(liquidBytesTotal / kilobytes).toFixed(2)} kB`\n    throw new error.Abort(\n      `Your theme app extension exceeds the total liquid file size limit (${LIQUID_SIZE_LIMIT_KB} kB). It's currently ${humanLiquidSize}.`,\n      `Reduce your total file size and try again.`,\n    )\n  }\n}\n\nfunction validateFile(filepath: string, dirname: string): void {\n  if (!SUPPORTED_BUCKETS.includes(dirname)) {\n    throw new error.Abort(\n      output.content`Your theme app extension includes files in an unsupported directory, ${output.token.path(\n        dirname,\n      )}`,\n      `Make sure all theme app extension files are in the supported directories: ${SUPPORTED_BUCKETS.join(', ')}`,\n    )\n  }\n  const filenameValidation = SUPPORTED_EXTS[dirname]!\n  if (!filepath.match(filenameValidation.validator)) {\n    throw new error.Abort(`Invalid filename in your theme app extension: ${filepath}\n${filenameValidation.failureMessage(filepath)}`)\n  }\n}\n\nfunction arraySum(array: number[]): number {\n  return array.reduce((num1, num2) => num1 + num2, 0)\n}\n"]}