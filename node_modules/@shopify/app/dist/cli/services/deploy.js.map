{"version":3,"file":"deploy.js","sourceRoot":"","sources":["../../../src/cli/services/deploy.ts"],"names":[],"mappings":"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","sourcesContent":["/* eslint-disable require-atomic-updates */\nimport {bundleUIAndBuildFunctionExtensions} from './deploy/bundle.js'\nimport {\n  uploadThemeExtensions,\n  uploadFunctionExtensions,\n  uploadUIExtensionsBundle,\n  UploadExtensionValidationError,\n} from './deploy/upload.js'\n\nimport {ensureDeployEnvironment} from './environment.js'\nimport {fetchAppExtensionRegistrations} from './dev/fetch.js'\nimport {AppInterface, getUIExtensionRendererVersion} from '../models/app/app.js'\nimport {Identifiers, updateAppIdentifiers} from '../models/app/identifiers.js'\nimport {Extension, UIExtension} from '../models/app/extensions.js'\nimport {isFunctionExtensionType, isThemeExtensionType, isUiExtensionType, UIExtensionTypes} from '../constants.js'\nimport {loadLocalesConfig} from '../utilities/extensions/locales-configuration.js'\nimport {validateExtensions} from '../validators/extensions.js'\nimport {OrganizationApp} from '../models/organization.js'\nimport {path, output, file, error, environment} from '@shopify/cli-kit'\nimport {AllAppExtensionRegistrationsQuerySchema} from '@shopify/cli-kit/src/api/graphql'\n\ninterface DeployOptions {\n  /** The app to be built and uploaded */\n  app: AppInterface\n\n  /** API key of the app in Partners admin */\n  apiKey?: string\n\n  /** If true, ignore any cached appId or extensionId */\n  reset: boolean\n}\n\nexport const deploy = async (options: DeployOptions) => {\n  if (!options.app.hasExtensions()) {\n    output.newline()\n    output.info(`No extensions to deploy to Shopify Partners yet.`)\n    return\n  }\n\n  // eslint-disable-next-line prefer-const\n  let {app, identifiers, partnersApp, partnersOrganizationId, token} = await ensureDeployEnvironment(options)\n  const apiKey = identifiers.app\n\n  output.newline()\n  output.info(`Deploying your work to Shopify Partners. It will be part of ${partnersApp.title}`)\n  output.newline()\n\n  const extensions = await Promise.all(\n    options.app.extensions.ui.map(async (extension) => {\n      return {\n        uuid: identifiers.extensions[extension.localIdentifier]!,\n        config: JSON.stringify(await configFor(extension, app)),\n        context: '',\n      }\n    }),\n  )\n\n  await file.inTemporaryDirectory(async (tmpDir) => {\n    try {\n      const bundlePath = path.join(tmpDir, `bundle.zip`)\n      await file.mkdir(path.dirname(bundlePath))\n      const bundle = app.extensions.ui.length !== 0\n      await bundleUIAndBuildFunctionExtensions({app, bundlePath, identifiers, bundle})\n\n      output.newline()\n      output.info(`Running validation…`)\n\n      await validateExtensions(app)\n\n      output.newline()\n      output.info(`Pushing your code to Shopify…`)\n      output.newline()\n\n      let validationErrors: UploadExtensionValidationError[] = []\n      if (bundle) {\n        /**\n         * The bundles only support UI extensions for now so we only need bundle and upload\n         * the bundle if the app has UI extensions.\n         */\n        validationErrors = await uploadUIExtensionsBundle({apiKey, bundlePath, extensions, token})\n      }\n\n      await uploadThemeExtensions(options.app.extensions.theme, {apiKey, identifiers, token})\n      identifiers = await uploadFunctionExtensions(app.extensions.function, {identifiers, token})\n      app = await updateAppIdentifiers({app, identifiers, command: 'deploy'})\n\n      if (validationErrors.length > 0) {\n        output.completed('Deployed to Shopify, but fixes are needed')\n      } else {\n        output.success('Deployed to Shopify')\n      }\n\n      const registrations = await fetchAppExtensionRegistrations({token, apiKey: identifiers.app})\n\n      await outputCompletionMessage({\n        app,\n        partnersApp,\n        partnersOrganizationId,\n        identifiers,\n        registrations,\n        validationErrors,\n      })\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    } catch (error: any) {\n      /**\n       * If deployment fails when uploading we want the identifiers to be persisted\n       * for the next run.\n       */\n      await updateAppIdentifiers({app, identifiers, command: 'deploy'})\n      throw error\n    }\n  })\n}\n\nasync function outputCompletionMessage({\n  app,\n  partnersApp,\n  partnersOrganizationId,\n  identifiers,\n  registrations,\n  validationErrors,\n}: {\n  app: AppInterface\n  partnersApp: Omit<OrganizationApp, 'apiSecretKeys' | 'apiKey'>\n  partnersOrganizationId: string\n  identifiers: Identifiers\n  registrations: AllAppExtensionRegistrationsQuerySchema\n  validationErrors: UploadExtensionValidationError[]\n}) {\n  output.newline()\n  output.info('  Summary:')\n  const outputDeployedButNotLiveMessage = (extension: Extension) => {\n    output.info(output.content`    • ${extension.localIdentifier} is deployed to Shopify but not yet live`)\n    const uuid = identifiers.extensions[extension.localIdentifier]\n    const validationError = validationErrors.find((error) => error.uuid === uuid)\n\n    if (validationError) {\n      const title = output.token.errorText('Validation errors found in your extension toml file')\n      output.info(output.content`       - ${title} `)\n      validationError.errors.forEach((err) => {\n        output.info(output.content`       └ ${output.token.italic(err.message)}`)\n      })\n    }\n  }\n  const outputDeployedAndLivedMessage = (extension: Extension) => {\n    output.info(output.content`    · ${extension.localIdentifier} is live`)\n  }\n  app.extensions.ui.forEach(outputDeployedButNotLiveMessage)\n  app.extensions.theme.forEach(outputDeployedButNotLiveMessage)\n  app.extensions.function.forEach(outputDeployedAndLivedMessage)\n\n  output.newline()\n  const outputNextStep = async (extension: Extension) => {\n    const extensionId =\n      registrations.app.extensionRegistrations.find((registration) => {\n        return registration.uuid === identifiers.extensions[extension.localIdentifier]\n      })?.id ?? ''\n    return output.content`    · Publish ${output.token.link(\n      extension.localIdentifier,\n      await getExtensionPublishURL({extension, partnersApp, partnersOrganizationId, extensionId}),\n    )}`\n  }\n  if (app.extensions.ui.length !== 0 || app.extensions.function.length !== 0) {\n    const lines = await Promise.all([...app.extensions.ui, ...app.extensions.theme].map(outputNextStep))\n    if (lines.length > 0) {\n      output.info('  Next steps in Shopify Partners:')\n      lines.forEach((line) => output.info(line))\n    }\n  }\n}\n\nasync function configFor(extension: UIExtension, app: AppInterface) {\n  const type = extension.type as UIExtensionTypes\n  switch (extension.type as UIExtensionTypes) {\n    case 'checkout_post_purchase':\n      return {metafields: extension.configuration.metafields}\n    case 'pos_ui_extension':\n    case 'product_subscription': {\n      const result = await getUIExtensionRendererVersion(type, app)\n      if (result === 'not_found') {\n        throw new error.Bug(\n          `Couldn't find renderer version for extension ${type}`,\n          'Make sure you have all your dependencies up to date',\n        )\n      }\n      return {renderer_version: result?.version}\n    }\n    case 'checkout_ui_extension': {\n      return {\n        extension_points: extension.configuration.extensionPoints,\n        capabilities: extension.configuration.capabilities,\n        metafields: extension.configuration.metafields,\n        name: extension.configuration.name,\n        settings: extension.configuration.settings,\n        localization: await loadLocalesConfig(extension.directory),\n      }\n    }\n    case 'customer_accounts_ui_extension': {\n      return {\n        extension_points: extension.configuration.extensionPoints,\n        name: extension.configuration.name,\n        categories: extension.configuration.categories,\n      }\n    }\n    case 'web_pixel_extension': {\n      return {\n        runtime_context: extension.configuration.runtimeContext,\n\n        runtime_configuration_definition: extension.configuration.settings,\n      }\n    }\n  }\n}\n\nasync function getExtensionPublishURL({\n  extension,\n  partnersApp,\n  partnersOrganizationId,\n  extensionId,\n}: {\n  extension: Extension\n  partnersApp: Omit<OrganizationApp, 'apiSecretKeys' | 'apiKey'>\n  partnersOrganizationId: string\n  extensionId: string\n}): Promise<string> {\n  const partnersFqdn = await environment.fqdn.partners()\n  if (isUiExtensionType(extension.type)) {\n    /**\n     * The source of truth for UI extensions' slugs is the client-side\n     * Partners' React application:\n     * https://github.com/Shopify/partners/tree/master/app/assets/javascripts/sections/apps/app-extensions/extensions\n     */\n    let pathComponent: string\n    switch (extension.type as UIExtensionTypes) {\n      case 'checkout_ui_extension':\n      case 'pos_ui_extension':\n      case 'product_subscription':\n      case 'customer_accounts_ui_extension':\n        pathComponent = extension.type\n        break\n      case 'checkout_post_purchase':\n        pathComponent = 'post_purchase'\n        break\n      case 'web_pixel_extension':\n        pathComponent = 'web_pixel'\n        break\n    }\n    return `https://${partnersFqdn}/${partnersOrganizationId}/apps/${partnersApp.id}/extensions/${pathComponent}/${extensionId}`\n  } else if (isFunctionExtensionType(extension.type)) {\n    return `https://${partnersFqdn}/${partnersOrganizationId}/apps/${partnersApp.id}/extensions`\n  } else if (isThemeExtensionType(extension.type)) {\n    return `https://${partnersFqdn}/${partnersOrganizationId}/apps/${partnersApp.id}/extensions/theme_app_extension/${extensionId}`\n  } else {\n    return ''\n  }\n}\n"]}