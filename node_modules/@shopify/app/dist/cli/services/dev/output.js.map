{"version":3,"file":"output.js","sourceRoot":"","sources":["../../../../src/cli/services/dev/output.ts"],"names":[],"mappings":"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","sourcesContent":["import {PartnersURLs} from './urls.js'\nimport {AppInterface} from '../../models/app/app.js'\nimport {FunctionExtension, ThemeExtension, UIExtension} from '../../models/app/extensions.js'\nimport {ExtensionTypes, getExtensionOutputConfig, UIExtensionTypes} from '../../constants.js'\nimport {OrganizationApp} from '../../models/organization.js'\nimport {output, string, environment} from '@shopify/cli-kit'\n\nexport async function outputUpdateURLsResult(\n  updated: boolean,\n  urls: PartnersURLs,\n  app: Omit<OrganizationApp, 'apiSecretKeys' | 'apiKey'> & {apiSecret?: string},\n) {\n  const dashboardURL = await partnersURL(app.organizationId, app.id)\n  if (app.newApp) {\n    outputUpdatedURLFirstTime(urls.applicationUrl, dashboardURL)\n  } else if (updated) {\n    output.completed('URL updated')\n  } else {\n    output.info(\n      output.content`\\nTo make URL updates manually, you can add the following URLs as redirects in your ${dashboardURL}:`,\n    )\n    urls.redirectUrlWhitelist.forEach((url) => output.info(`  ${url}`))\n  }\n}\n\nexport function outputUpdatedURLFirstTime(url: string, dashboardURL: string) {\n  const message =\n    `\\nFor your convenience, we've given your app a default URL: ${url}.\\n\\n` +\n    `You can update your app's URL anytime in the ${dashboardURL}. ` +\n    `But once your app is live, updating its URL will disrupt merchant access.`\n  output.info(message)\n}\n\nexport function outputAppURL(storeFqdn: string, url: string) {\n  const title = url.includes('localhost') ? 'App URL' : 'Shareable app URL'\n  const heading = output.token.heading(title)\n  const appURL = buildAppURL(storeFqdn, url)\n  output.info(output.content`\\n\\n${heading}\\n\\n  ${appURL}\\n`)\n}\n\nexport function outputDevConsoleURL(url: string) {\n  const title = 'Shopify extension dev console URL'\n  const heading = output.token.heading(title)\n  const devConsoleURL = `${url}/extensions/dev-console`\n  output.info(output.content`${heading}\\n\\n  ${devConsoleURL}\\n`)\n}\n\nexport function outputExtensionsMessages(app: AppInterface, storeFqdn: string, url: string) {\n  outputUIExtensionsURLs(app.extensions.ui, storeFqdn, url)\n  outputFunctionsMessage(app.extensions.function)\n  outputThemeExtensionsMessage(app.extensions.theme)\n}\n\nfunction outputUIExtensionsURLs(extensions: UIExtension[], storeFqdn: string, url: string) {\n  if (extensions.length > 0) {\n    outputDevConsoleURL(url)\n  }\n\n  for (const extension of extensions) {\n    const heading = output.token.heading(`${extension.configuration.name} (${getHumanKey(extension.type)})`)\n    let message: string\n    switch (extension.type as UIExtensionTypes) {\n      case 'checkout_post_purchase': {\n        message = postPurchaseMessage(url, extension).value\n        break\n      }\n      case 'checkout_ui_extension': {\n        message = checkoutUIMessage(url, extension).value\n        break\n      }\n      case 'customer_accounts_ui_extension': {\n        message = customerAccountsUIMessage(storeFqdn, url, extension).value\n        break\n      }\n      case 'product_subscription': {\n        message = productSubscriptionMessage(url, extension).value\n        break\n      }\n      case 'pos_ui_extension':\n      case 'web_pixel_extension':\n        continue\n    }\n    output.info(output.content`${heading}\\n${message}\\n`)\n  }\n}\n\nfunction outputFunctionsMessage(extensions: FunctionExtension[]) {\n  if (extensions.length === 0) return\n  const names = extensions.map((ext) => ext.configuration.name)\n  const heading = output.token.heading(names.join(', '))\n  const message = `These extensions need to be deployed to be manually tested.\nOne testing option is to use a separate app dedicated to staging.`\n  output.info(output.content`${heading}\\n${message}\\n`)\n}\n\nfunction outputThemeExtensionsMessage(extensions: ThemeExtension[]) {\n  if (extensions.length === 0) return\n  const heading = output.token.heading(`${extensions[0]!.configuration.name} (${getHumanKey(extensions[0]!.type)})`)\n  const link = output.token.link(\n    'dev doc instructions',\n    'https://shopify.dev/apps/online-store/theme-app-extensions/getting-started#step-3-test-your-changes',\n  )\n  const message = output.content`Follow the ${link} by deploying your work as a draft`.value\n  output.info(output.content`${heading}\\n${message}\\n`)\n}\n\nfunction buildAppURL(storeFqdn: string, publicURL: string) {\n  const hostUrl = `${storeFqdn}/admin`\n  const hostParam = Buffer.from(hostUrl).toString('base64').replace(/[=]/g, '')\n  return `${publicURL}?shop=${storeFqdn}&host=${hostParam}`\n}\n\nfunction postPurchaseMessage(url: string, extension: UIExtension) {\n  const publicURL = `${url}/extensions/${extension.devUUID}`\n  const devDocsLink = output.token.link(\n    'dev docs',\n    'https://shopify.dev/apps/checkout/post-purchase/getting-started-post-purchase-extension#step-2-test-the-extension',\n  )\n  const chromeLink = output.token.link(\n    'Shopify’s post-purchase Chrome extension',\n    'https://chrome.google.com/webstore/detail/shopify-post-purchase-dev/nenmcifhoegealiiblnpihbnjenleong',\n  )\n  return output.content`To view this extension:\n  1. Install ${chromeLink}\n  2. Open the Chrome extension and paste this URL into it: ${publicURL}\n  3. Run a test purchase on your store to view your extension\n\nFor more detail, see the ${devDocsLink}`\n}\n\nfunction checkoutUIMessage(url: string, extension: UIExtension) {\n  const publicURL = `${url}/extensions/${extension.devUUID}`\n  return output.content`Preview link: ${publicURL}`\n}\n\nfunction customerAccountsUIMessage(storeFqdn: string, url: string, extension: UIExtension) {\n  const [storeName, ...storeDomainParts] = storeFqdn.split('.')\n  const accountsUrl = `${storeName}.account.${storeDomainParts.join('.')}`\n  const origin = encodeURIComponent(`${url}/extensions`)\n  const publicURL = `https://${accountsUrl}/extensions-development?origin=${origin}&extensionId=${extension.devUUID}`\n  const notice = `Please open ${url} and click on 'Visit Site' and then close the tab to allow connections.\\n`\n  return output.content`${notice}Preview link: ${publicURL}`\n}\n\nfunction productSubscriptionMessage(url: string, extension: UIExtension) {\n  const publicURL = `${url}/extensions/${extension.devUUID}`\n  return output.content`Preview link: ${publicURL}`\n}\n\nfunction getHumanKey(type: ExtensionTypes) {\n  return string.capitalize(getExtensionOutputConfig(type).humanKey)\n}\n\nasync function partnersURL(organizationId: string, appId: string): Promise<string> {\n  return output.content`${output.token.link(\n    `Partners Dashboard`,\n    `https://${await environment.fqdn.partners()}/${organizationId}/apps/${appId}/edit`,\n  )}`.value\n}\n"]}