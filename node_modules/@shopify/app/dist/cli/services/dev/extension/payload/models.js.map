{"version":3,"file":"models.js","sourceRoot":"","sources":["../../../../../../src/cli/services/dev/extension/payload/models.ts"],"names":[],"mappings":"","sourcesContent":["import {ExtensionTypes, ExternalExtensionTypes} from '../../../../constants.js'\nimport {Localization} from '../localization.js'\nimport {UIExtensionSurface} from '../../../../utilities/extensions/configuration.js'\n\nexport interface ExtensionsPayloadInterface {\n  app: {\n    apiKey: string\n  }\n  store: string\n  extensions: UIExtensionPayload[]\n}\n\nexport interface ExtensionsEndpointPayload extends ExtensionsPayloadInterface {\n  version: string\n  root: {\n    url: string\n  }\n  devConsole: {\n    url: string\n  }\n  socket: {\n    url: string\n  }\n}\n\nexport interface UIExtensionPayload {\n  assets: {\n    main: {\n      name: 'main'\n      url: string\n      lastUpdated: number\n    }\n  }\n  capabilities?: Capabilities\n  development: {\n    resource: {\n      url?: string\n    }\n    root: {\n      url: string\n    }\n    hidden: boolean\n    status: ExtensionAssetBuildStatus\n    localizationStatus: ExtensionAssetBuildStatus\n  }\n  extensionPoints: string[] | null\n  localization: Localization | null\n  categories: string[] | null\n  metafields?: {namespace: string; key: string}[] | null\n  type: ExtensionTypes\n  externalType: ExternalExtensionTypes\n  uuid: string\n  version?: string\n  surface: UIExtensionSurface\n  title: string\n  approvalScopes: string[]\n}\n\nexport type ExtensionAssetBuildStatus = 'success' | 'error' | ''\n\nexport interface Capabilities {\n  [key: string]: boolean | undefined\n}\n"]}