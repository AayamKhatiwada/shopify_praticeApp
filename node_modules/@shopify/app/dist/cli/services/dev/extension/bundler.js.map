{"version":3,"file":"bundler.js","sourceRoot":"","sources":["../../../../../src/cli/services/dev/extension/bundler.ts"],"names":[],"mappings":"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","sourcesContent":["import {ExtensionsPayloadStore} from './payload/store.js'\nimport {ExtensionDevOptions} from '../extension.js'\nimport {bundleExtension} from '../../extensions/bundle.js'\nimport {abort, path, output} from '@shopify/cli-kit'\nimport chokidar from 'chokidar'\n\nexport interface WatchEvent {\n  path: string\n  type: 'build' | 'localization'\n}\n\nexport interface FileWatcherOptions {\n  devOptions: ExtensionDevOptions\n  payloadStore: ExtensionsPayloadStore\n}\n\nexport interface FileWatcher {\n  close: () => void\n}\n\nexport async function setupBundlerAndFileWatcher(options: FileWatcherOptions) {\n  const abortController = new abort.Controller()\n\n  const bundlers: Promise<void>[] = []\n\n  options.devOptions.extensions.forEach((extension) => {\n    bundlers.push(\n      bundleExtension({\n        minify: false,\n        outputBundlePath: extension.outputBundlePath,\n        sourceFilePath: extension.entrySourceFilePath,\n        environment: 'development',\n        env: {\n          ...(options.devOptions.app.dotenv?.variables ?? {}),\n          APP_URL: options.devOptions.url,\n        },\n        stderr: options.devOptions.stderr,\n        stdout: options.devOptions.stdout,\n        watchSignal: abortController.signal,\n        watch: (error) => {\n          output.debug(\n            `The Javascript bundle of the UI extension with ID ${extension.devUUID} has ${\n              error ? 'an error' : 'changed'\n            }`,\n          )\n\n          options.payloadStore\n            .updateExtension(extension, {\n              status: error ? 'error' : 'success',\n            })\n            // ESBuild handles error output\n            .then((_) => {})\n            .catch((_) => {})\n        },\n      }),\n    )\n\n    const localeWatcher = chokidar\n      .watch(path.join(extension.directory, 'locales', '**.json'))\n      .on('change', (event, path) => {\n        output.debug(`Locale file at path ${path} changed`)\n        options.payloadStore\n          .updateExtension(extension)\n          .then((closed) => {\n            output.debug(`Notified extension ${extension.devUUID} about the locale change.`)\n          })\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          .catch((_: any) => {})\n      })\n\n    abortController.signal.addEventListener('abort', () => {\n      output.debug(`Closing locale file watching for extension with ID ${extension.devUUID}`)\n      localeWatcher\n        .close()\n        .then(() => {\n          output.debug(`Locale file watching closed for extension with ${extension.devUUID}`)\n        })\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        .catch((error: any) => {\n          output.debug(\n            `Locale file watching failed to close for extension with ${extension.devUUID}: ${error.message}`,\n            output.consoleError,\n          )\n        })\n    })\n  })\n\n  await Promise.all(bundlers)\n\n  return {\n    close: () => {\n      abortController.abort()\n    },\n  }\n}\n"]}