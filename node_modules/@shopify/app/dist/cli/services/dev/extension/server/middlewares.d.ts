import { GetExtensionsMiddlewareOptions } from './models.js';
import { http } from '@shopify/cli-kit';
export declare function corsMiddleware(request: http.IncomingMessage, response: http.ServerResponse, next: (err?: Error) => unknown): void;
export declare function noCacheMiddleware(request: http.IncomingMessage, response: http.ServerResponse, next: (err?: Error) => unknown): void;
export declare function redirectToDevConsoleMiddleware(request: http.IncomingMessage, response: http.ServerResponse, next: (err?: Error) => unknown): Promise<void>;
export declare function fileServerMiddleware(request: http.IncomingMessage, response: http.ServerResponse, next: (err?: Error) => unknown, options: {
    filePath: string;
}): Promise<void>;
export declare function getExtensionAssetMiddleware({ devOptions }: GetExtensionsMiddlewareOptions): (request: http.IncomingMessage, response: http.ServerResponse, next: (err?: Error | undefined) => unknown) => Promise<void>;
export declare function getExtensionsPayloadMiddleware({ payloadStore }: GetExtensionsMiddlewareOptions): (request: http.IncomingMessage, response: http.ServerResponse, next: (err?: Error | undefined) => unknown) => Promise<void>;
export declare function devConsoleIndexMiddleware(request: http.IncomingMessage, response: http.ServerResponse, next: (err?: Error) => unknown): Promise<void>;
export declare function devConsoleAssetsMiddleware(request: http.IncomingMessage, response: http.ServerResponse, next: (err?: Error) => unknown): Promise<void>;
export declare function getLogMiddleware({ devOptions }: GetExtensionsMiddlewareOptions): (request: http.IncomingMessage, response: http.ServerResponse, next: (err?: Error | undefined) => unknown) => Promise<void>;
export declare function getExtensionPayloadMiddleware({ devOptions }: GetExtensionsMiddlewareOptions): (request: http.IncomingMessage, response: http.ServerResponse, next: (err?: Error | undefined) => unknown) => Promise<void>;
