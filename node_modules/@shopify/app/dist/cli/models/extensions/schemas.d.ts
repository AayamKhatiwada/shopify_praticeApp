import { schema } from '@shopify/cli-kit';
export declare const MetafieldSchema: schema.define.ZodObject<{
    namespace: schema.define.ZodString;
    key: schema.define.ZodString;
}, "strip", schema.define.ZodTypeAny, {
    namespace: string;
    key: string;
}, {
    namespace: string;
    key: string;
}>;
export declare const CapabilitiesSchema: schema.define.ZodObject<{
    network_access: schema.define.ZodOptional<schema.define.ZodBoolean>;
    block_progress: schema.define.ZodOptional<schema.define.ZodBoolean>;
}, "strip", schema.define.ZodTypeAny, {
    block_progress?: boolean | undefined;
    network_access?: boolean | undefined;
}, {
    block_progress?: boolean | undefined;
    network_access?: boolean | undefined;
}>;
export declare const TypeSchema: schema.define.ZodObject<{
    type: schema.define.ZodDefault<schema.define.ZodString>;
}, "strip", schema.define.ZodTypeAny, {
    type: string;
}, {
    type?: string | undefined;
}>;
export declare const ExtensionPointSchema: schema.define.ZodObject<{
    type: schema.define.ZodString;
    module: schema.define.ZodString;
    metafields: schema.define.ZodOptional<schema.define.ZodArray<schema.define.ZodObject<{
        namespace: schema.define.ZodString;
        key: schema.define.ZodString;
    }, "strip", schema.define.ZodTypeAny, {
        namespace: string;
        key: string;
    }, {
        namespace: string;
        key: string;
    }>, "many">>;
    capabilities: schema.define.ZodOptional<schema.define.ZodObject<{
        network_access: schema.define.ZodOptional<schema.define.ZodBoolean>;
        block_progress: schema.define.ZodOptional<schema.define.ZodBoolean>;
    }, "strip", schema.define.ZodTypeAny, {
        block_progress?: boolean | undefined;
        network_access?: boolean | undefined;
    }, {
        block_progress?: boolean | undefined;
        network_access?: boolean | undefined;
    }>>;
}, "strip", schema.define.ZodTypeAny, {
    metafields?: {
        namespace: string;
        key: string;
    }[] | undefined;
    capabilities?: {
        block_progress?: boolean | undefined;
        network_access?: boolean | undefined;
    } | undefined;
    type: string;
    module: string;
}, {
    metafields?: {
        namespace: string;
        key: string;
    }[] | undefined;
    capabilities?: {
        block_progress?: boolean | undefined;
        network_access?: boolean | undefined;
    } | undefined;
    type: string;
    module: string;
}>;
export declare const BaseExtensionSchema: schema.define.ZodObject<{
    name: schema.define.ZodString;
    type: schema.define.ZodString;
    extension_points: schema.define.ZodOptional<schema.define.ZodArray<schema.define.ZodObject<{
        type: schema.define.ZodString;
        module: schema.define.ZodString;
        metafields: schema.define.ZodOptional<schema.define.ZodArray<schema.define.ZodObject<{
            namespace: schema.define.ZodString;
            key: schema.define.ZodString;
        }, "strip", schema.define.ZodTypeAny, {
            namespace: string;
            key: string;
        }, {
            namespace: string;
            key: string;
        }>, "many">>;
        capabilities: schema.define.ZodOptional<schema.define.ZodObject<{
            network_access: schema.define.ZodOptional<schema.define.ZodBoolean>;
            block_progress: schema.define.ZodOptional<schema.define.ZodBoolean>;
        }, "strip", schema.define.ZodTypeAny, {
            block_progress?: boolean | undefined;
            network_access?: boolean | undefined;
        }, {
            block_progress?: boolean | undefined;
            network_access?: boolean | undefined;
        }>>;
    }, "strip", schema.define.ZodTypeAny, {
        metafields?: {
            namespace: string;
            key: string;
        }[] | undefined;
        capabilities?: {
            block_progress?: boolean | undefined;
            network_access?: boolean | undefined;
        } | undefined;
        type: string;
        module: string;
    }, {
        metafields?: {
            namespace: string;
            key: string;
        }[] | undefined;
        capabilities?: {
            block_progress?: boolean | undefined;
            network_access?: boolean | undefined;
        } | undefined;
        type: string;
        module: string;
    }>, "many">>;
    capabilities: schema.define.ZodOptional<schema.define.ZodObject<{
        block_progress: schema.define.ZodOptional<schema.define.ZodBoolean>;
        network_access: schema.define.ZodOptional<schema.define.ZodBoolean>;
    }, "strip", schema.define.ZodTypeAny, {
        block_progress?: boolean | undefined;
        network_access?: boolean | undefined;
    }, {
        block_progress?: boolean | undefined;
        network_access?: boolean | undefined;
    }>>;
    metafields: schema.define.ZodOptional<schema.define.ZodArray<schema.define.ZodObject<{
        namespace: schema.define.ZodString;
        key: schema.define.ZodString;
    }, "strip", schema.define.ZodTypeAny, {
        namespace: string;
        key: string;
    }, {
        namespace: string;
        key: string;
    }>, "many">>;
}, "strip", schema.define.ZodTypeAny, {
    metafields?: {
        namespace: string;
        key: string;
    }[] | undefined;
    capabilities?: {
        block_progress?: boolean | undefined;
        network_access?: boolean | undefined;
    } | undefined;
    extension_points?: {
        metafields?: {
            namespace: string;
            key: string;
        }[] | undefined;
        capabilities?: {
            block_progress?: boolean | undefined;
            network_access?: boolean | undefined;
        } | undefined;
        type: string;
        module: string;
    }[] | undefined;
    name: string;
    type: string;
}, {
    metafields?: {
        namespace: string;
        key: string;
    }[] | undefined;
    capabilities?: {
        block_progress?: boolean | undefined;
        network_access?: boolean | undefined;
    } | undefined;
    extension_points?: {
        metafields?: {
            namespace: string;
            key: string;
        }[] | undefined;
        capabilities?: {
            block_progress?: boolean | undefined;
            network_access?: boolean | undefined;
        } | undefined;
        type: string;
        module: string;
    }[] | undefined;
    name: string;
    type: string;
}>;
export declare const BaseFunctionConfigurationSchema: schema.define.ZodObject<{
    name: schema.define.ZodString;
    type: schema.define.ZodString;
    description: schema.define.ZodDefault<schema.define.ZodString>;
    build: schema.define.ZodObject<{
        command: schema.define.ZodString;
        path: schema.define.ZodOptional<schema.define.ZodString>;
    }, "strip", schema.define.ZodTypeAny, {
        path?: string | undefined;
        command: string;
    }, {
        path?: string | undefined;
        command: string;
    }>;
    configurationUi: schema.define.ZodDefault<schema.define.ZodOptional<schema.define.ZodBoolean>>;
    ui: schema.define.ZodOptional<schema.define.ZodObject<{
        paths: schema.define.ZodOptional<schema.define.ZodObject<{
            create: schema.define.ZodString;
            details: schema.define.ZodString;
        }, "strip", schema.define.ZodTypeAny, {
            create: string;
            details: string;
        }, {
            create: string;
            details: string;
        }>>;
    }, "strip", schema.define.ZodTypeAny, {
        paths?: {
            create: string;
            details: string;
        } | undefined;
    }, {
        paths?: {
            create: string;
            details: string;
        } | undefined;
    }>>;
    apiVersion: schema.define.ZodString;
}, "strip", schema.define.ZodTypeAny, {
    ui?: {
        paths?: {
            create: string;
            details: string;
        } | undefined;
    } | undefined;
    name: string;
    description: string;
    type: string;
    build: {
        path?: string | undefined;
        command: string;
    };
    configurationUi: boolean;
    apiVersion: string;
}, {
    ui?: {
        paths?: {
            create: string;
            details: string;
        } | undefined;
    } | undefined;
    description?: string | undefined;
    configurationUi?: boolean | undefined;
    name: string;
    type: string;
    build: {
        path?: string | undefined;
        command: string;
    };
    apiVersion: string;
}>;
export declare const BaseFunctionMetadataSchema: schema.define.ZodObject<{
    schemaVersions: schema.define.ZodObject<{}, "strip", schema.define.ZodObject<{
        major: schema.define.ZodNumber;
        minor: schema.define.ZodNumber;
    }, "strip", schema.define.ZodTypeAny, {
        major: number;
        minor: number;
    }, {
        major: number;
        minor: number;
    }>, {
        [x: string]: {
            major: number;
            minor: number;
        };
    }, {
        [x: string]: {
            major: number;
            minor: number;
        };
    }>;
}, "strip", schema.define.ZodTypeAny, {
    schemaVersions: {
        [x: string]: {
            major: number;
            minor: number;
        };
    };
}, {
    schemaVersions: {
        [x: string]: {
            major: number;
            minor: number;
        };
    };
}>;
