{"version":3,"file":"schemas.js","sourceRoot":"","sources":["../../../../src/cli/models/extensions/schemas.ts"],"names":[],"mappings":"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","sourcesContent":["import {schema} from '@shopify/cli-kit'\n\nexport const MetafieldSchema = schema.define.object({\n  namespace: schema.define.string(),\n  key: schema.define.string(),\n})\n\nexport const CapabilitiesSchema = schema.define.object({\n  network_access: schema.define.boolean().optional(),\n  block_progress: schema.define.boolean().optional(),\n})\n\nexport const TypeSchema = schema.define.object({\n  type: schema.define.string().default('ui-extension'),\n})\n\nexport const ExtensionPointSchema = schema.define.object({\n  type: schema.define.string(),\n  module: schema.define.string(),\n  metafields: schema.define.array(MetafieldSchema).optional(),\n  capabilities: CapabilitiesSchema.optional(),\n})\n\nexport const BaseExtensionSchema = schema.define.object({\n  name: schema.define.string(),\n  type: schema.define.string(),\n  extension_points: schema.define.array(ExtensionPointSchema).optional(),\n  capabilities: schema.define\n    .object({\n      block_progress: schema.define.boolean().optional(),\n      network_access: schema.define.boolean().optional(),\n    })\n    .optional(),\n  metafields: schema.define.array(MetafieldSchema).optional(),\n})\n\nexport const BaseFunctionConfigurationSchema = schema.define.object({\n  name: schema.define.string(),\n  type: schema.define.string(),\n  description: schema.define.string().default(''),\n  build: schema.define.object({\n    command: schema.define.string(),\n    path: schema.define.string().optional(),\n  }),\n  configurationUi: schema.define.boolean().optional().default(true),\n  ui: schema.define\n    .object({\n      paths: schema.define\n        .object({\n          create: schema.define.string(),\n          details: schema.define.string(),\n        })\n        .optional(),\n    })\n    .optional(),\n  apiVersion: schema.define.string(),\n})\n\nexport const BaseFunctionMetadataSchema = schema.define.object({\n  schemaVersions: schema.define.object({}).catchall(\n    schema.define.object({\n      major: schema.define.number(),\n      minor: schema.define.number(),\n    }),\n  ),\n})\n"]}