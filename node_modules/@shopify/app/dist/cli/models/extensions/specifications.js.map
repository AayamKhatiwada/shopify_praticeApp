{"version":3,"file":"specifications.js","sourceRoot":"","sources":["../../../../src/cli/models/extensions/specifications.ts"],"names":[],"mappings":"AAEA,OAAO,EAAC,IAAI,EAAC,MAAM,kBAAkB,CAAA;AACrC,OAAO,EAAC,aAAa,EAAC,MAAM,KAAK,CAAA;AAEjC,IAAI,oBAAqC,CAAA;AACzC,IAAI,mBAAmC,CAAA;AAEvC,MAAM,CAAC,KAAK,UAAU,0BAA0B;IAC9C,IAAI,oBAAoB;QAAE,OAAO,oBAAoB,CAAA;IACrD,MAAM,aAAa,GAAG,MAAM,SAAS,CAAC,2BAA2B,CAAC,CAAA;IAClE,kDAAkD;IAClD,oBAAoB,GAAG,aAAa,CAAA;IACpC,OAAO,aAAa,CAAA;AACtB,CAAC;AAED,MAAM,CAAC,KAAK,UAAU,yBAAyB;IAC7C,IAAI,mBAAmB;QAAE,OAAO,mBAAmB,CAAA;IACnD,MAAM,aAAa,GAAG,MAAM,SAAS,CAAC,yBAAyB,CAAC,CAAA;IAChE,kDAAkD;IAClD,mBAAmB,GAAG,aAAa,CAAA;IACnC,OAAO,aAAa,CAAA;AACtB,CAAC;AAED,KAAK,UAAU,SAAS,CAAC,aAAqB;IAC5C,MAAM,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE,MAAM,CAAC,CAAC,CAAA;IACrG,MAAM,KAAK,GAAG,MAAM,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAA;IAClC,MAAM,QAAQ,GAAG,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAA;IAClD,MAAM,OAAO,GAAG,MAAM,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAA;IAC3C,MAAM,KAAK,GAAG,OAAO,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,EAAE,CAAC,MAAM,CAAC,OAAO,CAAC,CAAA;IACrD,OAAO,KAAK,CAAA;AACd,CAAC","sourcesContent":["import {ExtensionSpec} from './extensions.js'\nimport {FunctionSpec} from './functions.js'\nimport {path} from '@shopify/cli-kit'\nimport {fileURLToPath} from 'url'\n\nlet loadedExtensionSpecs: ExtensionSpec[]\nlet loadedFunctionSpecs: FunctionSpec[]\n\nexport async function allExtensionSpecifications(): Promise<ExtensionSpec[]> {\n  if (loadedExtensionSpecs) return loadedExtensionSpecs\n  const registrations = await loadSpecs('extensions-specifications')\n  // eslint-disable-next-line require-atomic-updates\n  loadedExtensionSpecs = registrations\n  return registrations\n}\n\nexport async function allFunctionSpecifications(): Promise<FunctionSpec[]> {\n  if (loadedFunctionSpecs) return loadedFunctionSpecs\n  const registrations = await loadSpecs('function-specifications')\n  // eslint-disable-next-line require-atomic-updates\n  loadedFunctionSpecs = registrations\n  return registrations\n}\n\nasync function loadSpecs(directoryName: string) {\n  const url = path.join(path.dirname(fileURLToPath(import.meta.url)), path.join(directoryName, '*.js'))\n  const files = await path.glob(url)\n  const promises = files.map((file) => import(file))\n  const modules = await Promise.all(promises)\n  const specs = modules.map((module) => module.default)\n  return specs\n}\n"]}