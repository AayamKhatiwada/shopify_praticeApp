import { ExtensionTypes } from '../../constants.js';
import { schema } from '@shopify/cli-kit';
export interface Extension {
    idEnvironmentVariableName: string;
    localIdentifier: string;
    configurationPath: string;
    directory: string;
    type: ExtensionTypes;
    graphQLType: string;
}
export declare const UIExtensionConfigurationSchema: schema.define.ZodObject<{
    name: schema.define.ZodString;
    type: schema.define.ZodEnum<["product_subscription", "checkout_ui_extension", "checkout_post_purchase", "web_pixel_extension", "pos_ui_extension", "customer_accounts_ui_extension"]>;
    metafields: schema.define.ZodDefault<schema.define.ZodArray<schema.define.ZodObject<{
        namespace: schema.define.ZodString;
        key: schema.define.ZodString;
    }, "strip", schema.define.ZodTypeAny, {
        namespace: string;
        key: string;
    }, {
        namespace: string;
        key: string;
    }>, "many">>;
    extensionPoints: schema.define.ZodOptional<schema.define.ZodArray<schema.define.ZodString, "many">>;
    capabilities: schema.define.ZodOptional<schema.define.ZodObject<{
        block_progress: schema.define.ZodOptional<schema.define.ZodBoolean>;
        network_access: schema.define.ZodOptional<schema.define.ZodBoolean>;
    }, "strip", schema.define.ZodTypeAny, {
        block_progress?: boolean | undefined;
        network_access?: boolean | undefined;
    }, {
        block_progress?: boolean | undefined;
        network_access?: boolean | undefined;
    }>>;
    settings: schema.define.ZodOptional<schema.define.ZodAny>;
    categories: schema.define.ZodOptional<schema.define.ZodArray<schema.define.ZodString, "many">>;
    localization: schema.define.ZodOptional<schema.define.ZodAny>;
    runtimeContext: schema.define.ZodOptional<schema.define.ZodString>;
    version: schema.define.ZodOptional<schema.define.ZodString>;
    configuration: schema.define.ZodOptional<schema.define.ZodAny>;
}, "strip", schema.define.ZodTypeAny, {
    version?: string | undefined;
    extensionPoints?: string[] | undefined;
    capabilities?: {
        block_progress?: boolean | undefined;
        network_access?: boolean | undefined;
    } | undefined;
    settings?: any;
    categories?: string[] | undefined;
    localization?: any;
    runtimeContext?: string | undefined;
    configuration?: any;
    name: string;
    type: "product_subscription" | "checkout_ui_extension" | "checkout_post_purchase" | "web_pixel_extension" | "pos_ui_extension" | "customer_accounts_ui_extension";
    metafields: {
        namespace: string;
        key: string;
    }[];
}, {
    version?: string | undefined;
    metafields?: {
        namespace: string;
        key: string;
    }[] | undefined;
    extensionPoints?: string[] | undefined;
    capabilities?: {
        block_progress?: boolean | undefined;
        network_access?: boolean | undefined;
    } | undefined;
    settings?: any;
    categories?: string[] | undefined;
    localization?: any;
    runtimeContext?: string | undefined;
    configuration?: any;
    name: string;
    type: "product_subscription" | "checkout_ui_extension" | "checkout_post_purchase" | "web_pixel_extension" | "pos_ui_extension" | "customer_accounts_ui_extension";
}>;
export declare const UIExtensionConfigurationSupportedSchema: schema.define.ZodObject<schema.define.extendShape<{
    name: schema.define.ZodString;
    type: schema.define.ZodEnum<["product_subscription", "checkout_ui_extension", "checkout_post_purchase", "web_pixel_extension", "pos_ui_extension", "customer_accounts_ui_extension"]>;
    metafields: schema.define.ZodDefault<schema.define.ZodArray<schema.define.ZodObject<{
        namespace: schema.define.ZodString;
        key: schema.define.ZodString;
    }, "strip", schema.define.ZodTypeAny, {
        namespace: string;
        key: string;
    }, {
        namespace: string;
        key: string;
    }>, "many">>;
    extensionPoints: schema.define.ZodOptional<schema.define.ZodArray<schema.define.ZodString, "many">>;
    capabilities: schema.define.ZodOptional<schema.define.ZodObject<{
        block_progress: schema.define.ZodOptional<schema.define.ZodBoolean>;
        network_access: schema.define.ZodOptional<schema.define.ZodBoolean>;
    }, "strip", schema.define.ZodTypeAny, {
        block_progress?: boolean | undefined;
        network_access?: boolean | undefined;
    }, {
        block_progress?: boolean | undefined;
        network_access?: boolean | undefined;
    }>>;
    settings: schema.define.ZodOptional<schema.define.ZodAny>;
    categories: schema.define.ZodOptional<schema.define.ZodArray<schema.define.ZodString, "many">>;
    localization: schema.define.ZodOptional<schema.define.ZodAny>;
    runtimeContext: schema.define.ZodOptional<schema.define.ZodString>;
    version: schema.define.ZodOptional<schema.define.ZodString>;
    configuration: schema.define.ZodOptional<schema.define.ZodAny>;
}, {
    type: schema.define.ZodEnum<["product_subscription", "checkout_ui_extension", "checkout_post_purchase", "web_pixel_extension", "pos_ui_extension", "customer_accounts_ui_extension", "web_pixel", "post_purchase_ui", "checkout_ui", "pos_ui", "subscription_ui", "customer_accounts_ui"]>;
}>, "strip", schema.define.ZodTypeAny, {
    version?: string | undefined;
    extensionPoints?: string[] | undefined;
    capabilities?: {
        block_progress?: boolean | undefined;
        network_access?: boolean | undefined;
    } | undefined;
    settings?: any;
    categories?: string[] | undefined;
    localization?: any;
    runtimeContext?: string | undefined;
    configuration?: any;
    name: string;
    type: "product_subscription" | "checkout_ui_extension" | "checkout_post_purchase" | "web_pixel_extension" | "pos_ui_extension" | "customer_accounts_ui_extension" | "web_pixel" | "post_purchase_ui" | "checkout_ui" | "pos_ui" | "subscription_ui" | "customer_accounts_ui";
    metafields: {
        namespace: string;
        key: string;
    }[];
}, {
    version?: string | undefined;
    metafields?: {
        namespace: string;
        key: string;
    }[] | undefined;
    extensionPoints?: string[] | undefined;
    capabilities?: {
        block_progress?: boolean | undefined;
        network_access?: boolean | undefined;
    } | undefined;
    settings?: any;
    categories?: string[] | undefined;
    localization?: any;
    runtimeContext?: string | undefined;
    configuration?: any;
    name: string;
    type: "product_subscription" | "checkout_ui_extension" | "checkout_post_purchase" | "web_pixel_extension" | "pos_ui_extension" | "customer_accounts_ui_extension" | "web_pixel" | "post_purchase_ui" | "checkout_ui" | "pos_ui" | "subscription_ui" | "customer_accounts_ui";
}>;
export declare const FunctionExtensionConfigurationSchema: schema.define.ZodObject<{
    name: schema.define.ZodString;
    type: schema.define.ZodEnum<["product_discounts", "order_discounts", "shipping_discounts", "shipping_rate_presenter", "payment_customization", "delivery_customization"]>;
    description: schema.define.ZodDefault<schema.define.ZodString>;
    build: schema.define.ZodObject<{
        command: schema.define.ZodString;
        path: schema.define.ZodOptional<schema.define.ZodString>;
    }, "strip", schema.define.ZodTypeAny, {
        path?: string | undefined;
        command: string;
    }, {
        path?: string | undefined;
        command: string;
    }>;
    configurationUi: schema.define.ZodDefault<schema.define.ZodOptional<schema.define.ZodBoolean>>;
    ui: schema.define.ZodOptional<schema.define.ZodObject<{
        paths: schema.define.ZodOptional<schema.define.ZodObject<{
            create: schema.define.ZodString;
            details: schema.define.ZodString;
        }, "strip", schema.define.ZodTypeAny, {
            create: string;
            details: string;
        }, {
            create: string;
            details: string;
        }>>;
    }, "strip", schema.define.ZodTypeAny, {
        paths?: {
            create: string;
            details: string;
        } | undefined;
    }, {
        paths?: {
            create: string;
            details: string;
        } | undefined;
    }>>;
    apiVersion: schema.define.ZodString;
}, "strip", schema.define.ZodTypeAny, {
    ui?: {
        paths?: {
            create: string;
            details: string;
        } | undefined;
    } | undefined;
    name: string;
    description: string;
    type: "product_discounts" | "order_discounts" | "shipping_discounts" | "shipping_rate_presenter" | "payment_customization" | "delivery_customization";
    build: {
        path?: string | undefined;
        command: string;
    };
    configurationUi: boolean;
    apiVersion: string;
}, {
    ui?: {
        paths?: {
            create: string;
            details: string;
        } | undefined;
    } | undefined;
    description?: string | undefined;
    configurationUi?: boolean | undefined;
    name: string;
    type: "product_discounts" | "order_discounts" | "shipping_discounts" | "shipping_rate_presenter" | "payment_customization" | "delivery_customization";
    build: {
        path?: string | undefined;
        command: string;
    };
    apiVersion: string;
}>;
export declare const ThemeExtensionConfigurationSchema: schema.define.ZodObject<{
    name: schema.define.ZodString;
    type: schema.define.ZodEnum<["theme"]>;
}, "strip", schema.define.ZodTypeAny, {
    name: string;
    type: "theme";
}, {
    name: string;
    type: "theme";
}>;
export declare const FunctionExtensionMetadataSchema: schema.define.ZodObject<{
    schemaVersions: schema.define.ZodObject<{}, "strip", schema.define.ZodObject<{
        major: schema.define.ZodNumber;
        minor: schema.define.ZodNumber;
    }, "strip", schema.define.ZodTypeAny, {
        major: number;
        minor: number;
    }, {
        major: number;
        minor: number;
    }>, {
        [x: string]: {
            major: number;
            minor: number;
        };
    }, {
        [x: string]: {
            major: number;
            minor: number;
        };
    }>;
}, "strip", schema.define.ZodTypeAny, {
    schemaVersions: {
        [x: string]: {
            major: number;
            minor: number;
        };
    };
}, {
    schemaVersions: {
        [x: string]: {
            major: number;
            minor: number;
        };
    };
}>;
export declare type FunctionExtension = Extension & {
    configuration: FunctionExtensionConfiguration;
    metadata: FunctionExtensionMetadata;
    buildWasmPath: () => string;
    inputQueryPath: () => string;
};
export declare type ThemeExtension = Extension & {
    configuration: ThemeExtensionConfiguration;
};
export declare type UIExtension = Extension & {
    configuration: UIExtensionConfiguration;
    entrySourceFilePath: string;
    outputBundlePath: string;
    devUUID: string;
};
declare type UIExtensionConfiguration = schema.define.infer<typeof UIExtensionConfigurationSchema>;
declare type FunctionExtensionConfiguration = schema.define.infer<typeof FunctionExtensionConfigurationSchema>;
declare type ThemeExtensionConfiguration = schema.define.infer<typeof ThemeExtensionConfigurationSchema>;
declare type FunctionExtensionMetadata = schema.define.infer<typeof FunctionExtensionMetadataSchema>;
export {};
