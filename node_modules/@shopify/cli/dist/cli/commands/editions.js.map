{"version":3,"file":"editions.js","sourceRoot":"","sources":["../../../src/cli/commands/editions.ts"],"names":[],"mappings":"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","sourcesContent":["import Command from '@shopify/cli-kit/node/base-command'\nimport {output, ui} from '@shopify/cli-kit'\n\ntype Choice = 'bfs' | 'hydrogen' | 'devtools'\n\nconst subcommands: {[key in Choice]: () => void | Promise<void>} = {\n  bfs: () => {\n    output.info(\n      unindent(`\n        - Built for Shopify: Build great commerce apps that look and perform like they’re part of Shopify\n        - Shopify Functions: New ways to extend Shopify: Build custom discounts, shipping, and payments\n        - Checkout Extensibility: Apps for checkout are here: Powerful customizations that work with Shop Pay\n      `),\n    )\n    output.info(`\\n\\n`)\n    output.info(output.content`${output.token.yellow('Read more here: https://shopify.com/editions/dev#chapter-1')}`)\n  },\n  devtools: () => {\n    output.info(\n      unindent(`\n        - Developer Experience: Simplified updates to write and distribute an app\n        - Embedded App Improvements: Offer a truly seamless app experience\n        - Data Protection: Future-proof the apps you build\n      `),\n    )\n    output.info(`\\n\\n`)\n    output.info(output.content`${output.token.yellow('Read more here: https://shopify.com/editions/dev#chapter-2')}`)\n  },\n  hydrogen: () => {\n    output.info(\n      unindent(`\n        - Hydrogen + Oxygen: The Shopify stack for headless commerce\n        - Pixels: Intelligent interactions—powered by secure data\n        - Marketplace Kit: Add commerce to any platform\n      `),\n    )\n    output.info(`\\n\\n`)\n    output.info(output.content`${output.token.yellow('Read more here: https://shopify.com/editions/dev#chapter-3')}`)\n  },\n}\nexport default class Editions extends Command {\n  static description = 'Shopify editions'\n  static hidden = true\n\n  async run(): Promise<void> {\n    output.info(\n      output.content`${output.token.green(\n        unindent(`\n             _____ __                _ ____         ______    ___ __  _\n            / ___// /_  ____  ____  (_) __/_  __   / ____/___/ (_) /_(_)___  ____  _____\n            \\\\__ \\\\/ __ \\\\/ __ \\\\/ __ \\\\/ / /_/ / / /  / __/ / __  / / __/ / __ \\\\/ __ \\\\/ ___/\n           ___/ / / / / /_/ / /_/ / / __/ /_/ /  / /___/ /_/ / / /_/ / /_/ / / / (__  )\n          /____/_/ /_/\\\\____/ .___/_/_/  \\\\__, /  /_____/\\\\__,_/_/\\\\__/_/\\\\____/_/ /_/____/\n                          /_/          /____/\n              ____               __  ___          __\n             / __ \\\\___ _   __   /  |/  /___  ____/ /__\n            / / / / _ \\\\ | / /  / /|_/ / __ \\\\/ __  / _ \\\\\n           / /_/ /  __/ |/ /  / /  / / /_/ / /_/ /  __/\n          /_____/\\\\___/|___/  /_/  /_/\\\\____/\\\\__,_/\\\\___/\n        `),\n      )}`,\n    )\n\n    output.info(\n      unindent(`\n\n\n        Welcome to Dev Mode for the Summer 2022 Edition\n        https://shopify.com/editions/dev\n\n\n      `),\n    )\n\n    const answer: {editionschoice: Choice} = await ui.prompt([\n      {\n        name: 'editionschoice',\n        type: 'select',\n        message: 'What are you looking to solve?',\n        choices: [\n          {\n            value: 'bfs',\n            name: 'NEW WAYS TO BUILD GREAT APPS',\n          },\n          {\n            value: 'devtools',\n            name: 'IMPROVED DEV TOOLS',\n          },\n          {\n            value: 'hydrogen',\n            name: 'NEXT LEVEL STOREFRONT BUILDING',\n          },\n        ],\n      },\n    ])\n\n    await subcommands[answer.editionschoice]?.()\n    output.info(`\\n\\n\\n`)\n  }\n}\n\nfunction unindent(value: string): string {\n  const lines = value.split('\\n')\n  // Remove empty lines at start and end\n  if (lines[0]?.trim() === '') lines.shift()\n  if (lines.at(-1)?.trim() === '') lines.pop()\n  const nonEmptyLines = lines.filter((line) => line.trim().length > 0)\n  const numSpacesToCut = Math.min(...nonEmptyLines.map((line) => (/^[\\s]*[^\\s]/.exec(line)?.[0]?.length || 1) - 1))\n  return lines.map((line) => line.slice(numSpacesToCut)).join('\\n')\n}\n"]}